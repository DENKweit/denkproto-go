//////////////////////////////////////////////////////////////////////////////////////////////////////
// !!!!!!!!!!! change version number in pb_ProtocolVersionDetection when protocol changed !!!!!!!!!!!!!!!!!!!!!
//////////////////////////////////////////////////////////////////////////////////////////////////////

// history //

// v1.100   (Volker Gutewort)
// initial test version

// v1.102   (Volker Gutewort)
// all tabs converted to spaces
// history added
// changed name and numeric type of timestamp values (uint64 --> int64)

// v1.103   (Volker Gutewort)
// 'failure' changed to 'feature'

// v1.105   (Volker Gutewort)
// ATTENTION: changes are incompatible to previous protocol versions !!!!
// new message added "GETPRESETS"    (new message numbering)
// message GETCONFIGINFO changed to GETCONFIGPARAMS
// new message added SETCONFIGPARAMS
// new message parameters for pb_Body_SetConfig
// change of nomenclature of message names of responses (use underscore in front of _Response)

// v1.107   (Volker Gutewort)
// ATTENTION: changes are incompatible to previous protocol versions !!!!
// added suffixes to most of the enum types (otherwise it's possible to get in trouble with some internal names of C++ like 'IN', 'OUT', 'ERROR', ...)
// added classification in IMAGERESULT message

// v1.109   (Volker Gutewort)
// added new optional value "pb_Body_ImageResult.pb_ImageClassification.image_quality_score
// added new optional value "pb_Body_ImageResult.pb_ImageClassification.image_ok_score
// changed default value of pb_Body_SetConfig.pb_ConfigParam.val_double from 0 to -1e99

// v1.111   (Volker Gutewort)
// ATTENTION: changes are incompatible to previous protocol versions !!!!
// defined a sub message pb_ImageData to transport images (can be used in different messages)
// pb_Body_AnalyzeImage uses pb_ImageData instead an own bytes array (incompatible to previous versions)
// added options to return plain and overlayed images in ImageResult

// v1.113   (Volker Gutewort)
// added new optional feature parameters  (area_edge, length_edge, avggrayvalue, maxgrayvalue, mingrayvalue)
// added new optional image classification parameters  (image_avggrayvalue, image_maxgrayvalue, image_mingrayvalue)

// v1.115   (Volker Gutewort)
// added option to send additional data (e.g. Isc, Voc, ...) in AnalyzeImage message (pb_AdditionalData)

// v1.117   (Volker Gutewort)
// added multiple images support in AnalyzeImage and ImageResult message

// v1.119   (Volker Gutewort)
// added optional unique ID per feature and possibility to reference to related features (pb_FeatureInfo)

//*******************************************************************************************
// pb_MessageHeader
//*******************************************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: ImageAnalysis_ProtobufMessages.proto

package image_analysis

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataTypeEnum int32

const (
	DataTypeEnum_UNDEFINED_DT DataTypeEnum = 0
	DataTypeEnum_STRING_DT    DataTypeEnum = 1 // text
	DataTypeEnum_DOUBLE_DT    DataTypeEnum = 2 // numeric
	DataTypeEnum_JSON_DT      DataTypeEnum = 3 // special string type with an internal JSON format
)

// Enum value maps for DataTypeEnum.
var (
	DataTypeEnum_name = map[int32]string{
		0: "UNDEFINED_DT",
		1: "STRING_DT",
		2: "DOUBLE_DT",
		3: "JSON_DT",
	}
	DataTypeEnum_value = map[string]int32{
		"UNDEFINED_DT": 0,
		"STRING_DT":    1,
		"DOUBLE_DT":    2,
		"JSON_DT":      3,
	}
)

func (x DataTypeEnum) Enum() *DataTypeEnum {
	p := new(DataTypeEnum)
	*p = x
	return p
}

func (x DataTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[0].Descriptor()
}

func (DataTypeEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[0]
}

func (x DataTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DataTypeEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DataTypeEnum(num)
	return nil
}

// Deprecated: Use DataTypeEnum.Descriptor instead.
func (DataTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{0}
}

type Pb_MessageHeader_MessageType int32

const (
	Pb_MessageHeader_UNDEFINED        Pb_MessageHeader_MessageType = 0
	Pb_MessageHeader_GETSTATUS        Pb_MessageHeader_MessageType = 1    // GUI -> IA             // send status information (available config sets, image analyses in process, ...)
	Pb_MessageHeader_GETVERSION       Pb_MessageHeader_MessageType = 2    // GUI -> IA             // send name and version of the program
	Pb_MessageHeader_INIT             Pb_MessageHeader_MessageType = 3    // GUI -> IA             // initialize (remove all configurations and image analyses in process)
	Pb_MessageHeader_GETPRESETS       Pb_MessageHeader_MessageType = 4    // GUI -> IA             // get a list of available configuration presets from IA
	Pb_MessageHeader_GETPRESETINFO    Pb_MessageHeader_MessageType = 5    // GUI -> IA             // get detailed information of a preset from IA
	Pb_MessageHeader_SETCONFIG        Pb_MessageHeader_MessageType = 6    // GUI -> IA             // set the parameter of a new or currently available configuration
	Pb_MessageHeader_REMOVECONFIG     Pb_MessageHeader_MessageType = 7    // GUI -> IA             // removes config set from available configuration list
	Pb_MessageHeader_GETCONFIGPARAMS  Pb_MessageHeader_MessageType = 8    // GUI -> IA             // asks for a list of parameter values
	Pb_MessageHeader_SETCONFIGPARAMS  Pb_MessageHeader_MessageType = 9    // GUI -> IA             // send new config parameters to IA
	Pb_MessageHeader_ANALYZEIMAGE     Pb_MessageHeader_MessageType = 10   // GUI -> IA             // send image for analyzing
	Pb_MessageHeader_IMAGERESULT      Pb_MessageHeader_MessageType = 11   // IA -> GUI             // send back analysis result to GUI
	Pb_MessageHeader_INFOMESSAGE      Pb_MessageHeader_MessageType = 12   // IA -> GUI             // send a notification (will be shown in log)
	Pb_MessageHeader_GETCONFIGFILE    Pb_MessageHeader_MessageType = 1000 // GUI -> IA             // Get information on the currently used config file and other available config files
	Pb_MessageHeader_SETCONFIGFILE    Pb_MessageHeader_MessageType = 1001 // GUI -> IA             // Selects a new config file by name
	Pb_MessageHeader_MODIFYCONFIGFILE Pb_MessageHeader_MessageType = 1002 // GUI -> IA             // Overwrites the current config file with new content
	Pb_MessageHeader_GETSTATISTICS    Pb_MessageHeader_MessageType = 1003 // GUI -> IA             // Get current statistics as CSV string
)

// Enum value maps for Pb_MessageHeader_MessageType.
var (
	Pb_MessageHeader_MessageType_name = map[int32]string{
		0:    "UNDEFINED",
		1:    "GETSTATUS",
		2:    "GETVERSION",
		3:    "INIT",
		4:    "GETPRESETS",
		5:    "GETPRESETINFO",
		6:    "SETCONFIG",
		7:    "REMOVECONFIG",
		8:    "GETCONFIGPARAMS",
		9:    "SETCONFIGPARAMS",
		10:   "ANALYZEIMAGE",
		11:   "IMAGERESULT",
		12:   "INFOMESSAGE",
		1000: "GETCONFIGFILE",
		1001: "SETCONFIGFILE",
		1002: "MODIFYCONFIGFILE",
		1003: "GETSTATISTICS",
	}
	Pb_MessageHeader_MessageType_value = map[string]int32{
		"UNDEFINED":        0,
		"GETSTATUS":        1,
		"GETVERSION":       2,
		"INIT":             3,
		"GETPRESETS":       4,
		"GETPRESETINFO":    5,
		"SETCONFIG":        6,
		"REMOVECONFIG":     7,
		"GETCONFIGPARAMS":  8,
		"SETCONFIGPARAMS":  9,
		"ANALYZEIMAGE":     10,
		"IMAGERESULT":      11,
		"INFOMESSAGE":      12,
		"GETCONFIGFILE":    1000,
		"SETCONFIGFILE":    1001,
		"MODIFYCONFIGFILE": 1002,
		"GETSTATISTICS":    1003,
	}
)

func (x Pb_MessageHeader_MessageType) Enum() *Pb_MessageHeader_MessageType {
	p := new(Pb_MessageHeader_MessageType)
	*p = x
	return p
}

func (x Pb_MessageHeader_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_MessageHeader_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[1].Descriptor()
}

func (Pb_MessageHeader_MessageType) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[1]
}

func (x Pb_MessageHeader_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_MessageHeader_MessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_MessageHeader_MessageType(num)
	return nil
}

// Deprecated: Use Pb_MessageHeader_MessageType.Descriptor instead.
func (Pb_MessageHeader_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{1, 0}
}

type Pb_Body_GetPresetInfo_Response_DirectionEnum int32

const (
	Pb_Body_GetPresetInfo_Response_UNDEFINED_DR Pb_Body_GetPresetInfo_Response_DirectionEnum = 0
	Pb_Body_GetPresetInfo_Response_IN_DR        Pb_Body_GetPresetInfo_Response_DirectionEnum = 1 // parameter can be set by the GUI (but can't be read)
	Pb_Body_GetPresetInfo_Response_OUT_DR       Pb_Body_GetPresetInfo_Response_DirectionEnum = 2 // parameter can be read by the GUI (but can't be set)
	Pb_Body_GetPresetInfo_Response_IN_OUT_DR    Pb_Body_GetPresetInfo_Response_DirectionEnum = 3 // parameter can be read and set by the GUI
)

// Enum value maps for Pb_Body_GetPresetInfo_Response_DirectionEnum.
var (
	Pb_Body_GetPresetInfo_Response_DirectionEnum_name = map[int32]string{
		0: "UNDEFINED_DR",
		1: "IN_DR",
		2: "OUT_DR",
		3: "IN_OUT_DR",
	}
	Pb_Body_GetPresetInfo_Response_DirectionEnum_value = map[string]int32{
		"UNDEFINED_DR": 0,
		"IN_DR":        1,
		"OUT_DR":       2,
		"IN_OUT_DR":    3,
	}
)

func (x Pb_Body_GetPresetInfo_Response_DirectionEnum) Enum() *Pb_Body_GetPresetInfo_Response_DirectionEnum {
	p := new(Pb_Body_GetPresetInfo_Response_DirectionEnum)
	*p = x
	return p
}

func (x Pb_Body_GetPresetInfo_Response_DirectionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_Body_GetPresetInfo_Response_DirectionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[2].Descriptor()
}

func (Pb_Body_GetPresetInfo_Response_DirectionEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[2]
}

func (x Pb_Body_GetPresetInfo_Response_DirectionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_Body_GetPresetInfo_Response_DirectionEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_Body_GetPresetInfo_Response_DirectionEnum(num)
	return nil
}

// Deprecated: Use Pb_Body_GetPresetInfo_Response_DirectionEnum.Descriptor instead.
func (Pb_Body_GetPresetInfo_Response_DirectionEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{7, 0}
}

type Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum int32

const (
	Pb_Body_SetConfigPb_CellInfo_UNDEFINED_BO  Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum = 0
	Pb_Body_SetConfigPb_CellInfo_HORIZONTAL_BO Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum = 1
	Pb_Body_SetConfigPb_CellInfo_VERTICAL_BO   Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum = 2
)

// Enum value maps for Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum.
var (
	Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum_name = map[int32]string{
		0: "UNDEFINED_BO",
		1: "HORIZONTAL_BO",
		2: "VERTICAL_BO",
	}
	Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum_value = map[string]int32{
		"UNDEFINED_BO":  0,
		"HORIZONTAL_BO": 1,
		"VERTICAL_BO":   2,
	}
)

func (x Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) Enum() *Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum {
	p := new(Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum)
	*p = x
	return p
}

func (x Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[3].Descriptor()
}

func (Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[3]
}

func (x Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum(num)
	return nil
}

// Deprecated: Use Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum.Descriptor instead.
func (Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{9, 0, 0}
}

type Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum int32

const (
	Pb_Body_SetConfigPb_CellInfo_UNDEFINED_CT Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum = 0
	Pb_Body_SetConfigPb_CellInfo_MONO_CT      Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum = 1
	Pb_Body_SetConfigPb_CellInfo_POLY_CT      Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum = 2
)

// Enum value maps for Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum.
var (
	Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum_name = map[int32]string{
		0: "UNDEFINED_CT",
		1: "MONO_CT",
		2: "POLY_CT",
	}
	Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum_value = map[string]int32{
		"UNDEFINED_CT": 0,
		"MONO_CT":      1,
		"POLY_CT":      2,
	}
)

func (x Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) Enum() *Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum {
	p := new(Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum)
	*p = x
	return p
}

func (x Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[4].Descriptor()
}

func (Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[4]
}

func (x Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum(num)
	return nil
}

// Deprecated: Use Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum.Descriptor instead.
func (Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{9, 0, 1}
}

type Pb_ImageDataPb_FileFormatEnum int32

const (
	Pb_ImageData_UNDEFINED_FF Pb_ImageDataPb_FileFormatEnum = 0
	Pb_ImageData_PNG_FF       Pb_ImageDataPb_FileFormatEnum = 1
	Pb_ImageData_JPG_FF       Pb_ImageDataPb_FileFormatEnum = 2
	Pb_ImageData_RAW_FF       Pb_ImageDataPb_FileFormatEnum = 3
	Pb_ImageData_BYTES        Pb_ImageDataPb_FileFormatEnum = 100
	Pb_ImageData_TIF_FF       Pb_ImageDataPb_FileFormatEnum = 101
)

// Enum value maps for Pb_ImageDataPb_FileFormatEnum.
var (
	Pb_ImageDataPb_FileFormatEnum_name = map[int32]string{
		0:   "UNDEFINED_FF",
		1:   "PNG_FF",
		2:   "JPG_FF",
		3:   "RAW_FF",
		100: "BYTES",
		101: "TIF_FF",
	}
	Pb_ImageDataPb_FileFormatEnum_value = map[string]int32{
		"UNDEFINED_FF": 0,
		"PNG_FF":       1,
		"JPG_FF":       2,
		"RAW_FF":       3,
		"BYTES":        100,
		"TIF_FF":       101,
	}
)

func (x Pb_ImageDataPb_FileFormatEnum) Enum() *Pb_ImageDataPb_FileFormatEnum {
	p := new(Pb_ImageDataPb_FileFormatEnum)
	*p = x
	return p
}

func (x Pb_ImageDataPb_FileFormatEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_ImageDataPb_FileFormatEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[5].Descriptor()
}

func (Pb_ImageDataPb_FileFormatEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[5]
}

func (x Pb_ImageDataPb_FileFormatEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_ImageDataPb_FileFormatEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_ImageDataPb_FileFormatEnum(num)
	return nil
}

// Deprecated: Use Pb_ImageDataPb_FileFormatEnum.Descriptor instead.
func (Pb_ImageDataPb_FileFormatEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{14, 0}
}

type Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum int32

const (
	Pb_Body_ImageResultPb_ImageClassification_UNDEFINED_QUALITY   Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum = 0
	Pb_Body_ImageResultPb_ImageClassification_NO_ISSUE_QUALITY    Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum = 1 // all fine with this image
	Pb_Body_ImageResultPb_ImageClassification_MINOR_ISSUE_QUALITY Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum = 2 // there was an minor problem found
	Pb_Body_ImageResultPb_ImageClassification_MAJOR_ISSUE_QUALITY Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum = 3 // there was an major problem found
)

// Enum value maps for Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum.
var (
	Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum_name = map[int32]string{
		0: "UNDEFINED_QUALITY",
		1: "NO_ISSUE_QUALITY",
		2: "MINOR_ISSUE_QUALITY",
		3: "MAJOR_ISSUE_QUALITY",
	}
	Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum_value = map[string]int32{
		"UNDEFINED_QUALITY":   0,
		"NO_ISSUE_QUALITY":    1,
		"MINOR_ISSUE_QUALITY": 2,
		"MAJOR_ISSUE_QUALITY": 3,
	}
)

func (x Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) Enum() *Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum {
	p := new(Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum)
	*p = x
	return p
}

func (x Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[6].Descriptor()
}

func (Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[6]
}

func (x Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum(num)
	return nil
}

// Deprecated: Use Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum.Descriptor instead.
func (Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 6, 0}
}

type Pb_Body_InfoMessagePb_InfoTypeEnum int32

const (
	Pb_Body_InfoMessage_UNDEFINED_IT Pb_Body_InfoMessagePb_InfoTypeEnum = 0
	Pb_Body_InfoMessage_DEBUG_IT     Pb_Body_InfoMessagePb_InfoTypeEnum = 1
	Pb_Body_InfoMessage_INFO_IT      Pb_Body_InfoMessagePb_InfoTypeEnum = 2
	Pb_Body_InfoMessage_WARNING_IT   Pb_Body_InfoMessagePb_InfoTypeEnum = 3
	Pb_Body_InfoMessage_ERROR_IT     Pb_Body_InfoMessagePb_InfoTypeEnum = 4
)

// Enum value maps for Pb_Body_InfoMessagePb_InfoTypeEnum.
var (
	Pb_Body_InfoMessagePb_InfoTypeEnum_name = map[int32]string{
		0: "UNDEFINED_IT",
		1: "DEBUG_IT",
		2: "INFO_IT",
		3: "WARNING_IT",
		4: "ERROR_IT",
	}
	Pb_Body_InfoMessagePb_InfoTypeEnum_value = map[string]int32{
		"UNDEFINED_IT": 0,
		"DEBUG_IT":     1,
		"INFO_IT":      2,
		"WARNING_IT":   3,
		"ERROR_IT":     4,
	}
)

func (x Pb_Body_InfoMessagePb_InfoTypeEnum) Enum() *Pb_Body_InfoMessagePb_InfoTypeEnum {
	p := new(Pb_Body_InfoMessagePb_InfoTypeEnum)
	*p = x
	return p
}

func (x Pb_Body_InfoMessagePb_InfoTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pb_Body_InfoMessagePb_InfoTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_ImageAnalysis_ProtobufMessages_proto_enumTypes[7].Descriptor()
}

func (Pb_Body_InfoMessagePb_InfoTypeEnum) Type() protoreflect.EnumType {
	return &file_ImageAnalysis_ProtobufMessages_proto_enumTypes[7]
}

func (x Pb_Body_InfoMessagePb_InfoTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Pb_Body_InfoMessagePb_InfoTypeEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Pb_Body_InfoMessagePb_InfoTypeEnum(num)
	return nil
}

// Deprecated: Use Pb_Body_InfoMessagePb_InfoTypeEnum.Descriptor instead.
func (Pb_Body_InfoMessagePb_InfoTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{19, 0}
}

type Pb_ProtocolVersionDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersionMajor *int32 `protobuf:"varint,1,opt,name=protocol_version_major,json=protocolVersionMajor,def=1" json:"protocol_version_major,omitempty"`   // major version of protocol
	ProtocolVersionMinor *int32 `protobuf:"varint,2,opt,name=protocol_version_minor,json=protocolVersionMinor,def=119" json:"protocol_version_minor,omitempty"` // minor version of protocol - 3 digits starting from 100 (even minor version (0,2,4,6,8, ...) -> version in development;  odd version --> release version)
}

// Default values for Pb_ProtocolVersionDetection fields.
const (
	Default_Pb_ProtocolVersionDetection_ProtocolVersionMajor = int32(1)
	Default_Pb_ProtocolVersionDetection_ProtocolVersionMinor = int32(119)
)

func (x *Pb_ProtocolVersionDetection) Reset() {
	*x = Pb_ProtocolVersionDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_ProtocolVersionDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_ProtocolVersionDetection) ProtoMessage() {}

func (x *Pb_ProtocolVersionDetection) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_ProtocolVersionDetection.ProtoReflect.Descriptor instead.
func (*Pb_ProtocolVersionDetection) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{0}
}

func (x *Pb_ProtocolVersionDetection) GetProtocolVersionMajor() int32 {
	if x != nil && x.ProtocolVersionMajor != nil {
		return *x.ProtocolVersionMajor
	}
	return Default_Pb_ProtocolVersionDetection_ProtocolVersionMajor
}

func (x *Pb_ProtocolVersionDetection) GetProtocolVersionMinor() int32 {
	if x != nil && x.ProtocolVersionMinor != nil {
		return *x.ProtocolVersionMinor
	}
	return Default_Pb_ProtocolVersionDetection_ProtocolVersionMinor
}

type Pb_MessageHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType          *Pb_MessageHeader_MessageType `protobuf:"varint,1,req,name=message_type,json=messageType,enum=image_analysis.Pb_MessageHeader_MessageType" json:"message_type,omitempty"` // type of this message
	Response             *bool                         `protobuf:"varint,2,req,name=response" json:"response,omitempty"`                                                                           // true/false  --> is this message a response or a message
	MessageCounter       *uint32                       `protobuf:"varint,3,req,name=message_counter,json=messageCounter" json:"message_counter,omitempty"`                                         // will be increased by one before every message is sent
	SizeMessageBody      *uint32                       `protobuf:"varint,4,req,name=size_message_body,json=sizeMessageBody" json:"size_message_body,omitempty"`                                    // size of the message body (could be used to jump over unknown messages)
	ProtocolVersionMajor *int32                        `protobuf:"varint,5,opt,name=protocol_version_major,json=protocolVersionMajor" json:"protocol_version_major,omitempty"`                     // major version of protocol
	ProtocolVersionMinor *int32                        `protobuf:"varint,6,opt,name=protocol_version_minor,json=protocolVersionMinor" json:"protocol_version_minor,omitempty"`                     // minor version of protocol - 3gigits starting from 100 (even minor version (0,2,4,6,8, ...) -> version in development;  odd version --> release version)
	TimestampUtcMs       *int64                        `protobuf:"varint,7,req,name=timestamp_utc_ms,json=timestampUtcMs" json:"timestamp_utc_ms,omitempty"`                                       // unix like datetime value (UTC) in milliseconds since 1970/1/1
	ErrorCode            *int32                        `protobuf:"varint,8,req,name=error_code,json=errorCode" json:"error_code,omitempty"`                                                        // 0 means no error   (negative and positive values are allowed)
	InfoText             *string                       `protobuf:"bytes,9,opt,name=info_text,json=infoText" json:"info_text,omitempty"`
	IntValues            []int32                       `protobuf:"varint,10,rep,name=int_values,json=intValues" json:"int_values,omitempty"`           // optional integer values (could be used for debug purposes)
	DoubleValues         []float64                     `protobuf:"fixed64,11,rep,name=double_values,json=doubleValues" json:"double_values,omitempty"` // optional double values (could be used for debug purposes)
	StringValues         []string                      `protobuf:"bytes,12,rep,name=string_values,json=stringValues" json:"string_values,omitempty"`   // optional string values (could be used for debug purposes)
}

func (x *Pb_MessageHeader) Reset() {
	*x = Pb_MessageHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_MessageHeader) ProtoMessage() {}

func (x *Pb_MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_MessageHeader.ProtoReflect.Descriptor instead.
func (*Pb_MessageHeader) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{1}
}

func (x *Pb_MessageHeader) GetMessageType() Pb_MessageHeader_MessageType {
	if x != nil && x.MessageType != nil {
		return *x.MessageType
	}
	return Pb_MessageHeader_UNDEFINED
}

func (x *Pb_MessageHeader) GetResponse() bool {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return false
}

func (x *Pb_MessageHeader) GetMessageCounter() uint32 {
	if x != nil && x.MessageCounter != nil {
		return *x.MessageCounter
	}
	return 0
}

func (x *Pb_MessageHeader) GetSizeMessageBody() uint32 {
	if x != nil && x.SizeMessageBody != nil {
		return *x.SizeMessageBody
	}
	return 0
}

func (x *Pb_MessageHeader) GetProtocolVersionMajor() int32 {
	if x != nil && x.ProtocolVersionMajor != nil {
		return *x.ProtocolVersionMajor
	}
	return 0
}

func (x *Pb_MessageHeader) GetProtocolVersionMinor() int32 {
	if x != nil && x.ProtocolVersionMinor != nil {
		return *x.ProtocolVersionMinor
	}
	return 0
}

func (x *Pb_MessageHeader) GetTimestampUtcMs() int64 {
	if x != nil && x.TimestampUtcMs != nil {
		return *x.TimestampUtcMs
	}
	return 0
}

func (x *Pb_MessageHeader) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *Pb_MessageHeader) GetInfoText() string {
	if x != nil && x.InfoText != nil {
		return *x.InfoText
	}
	return ""
}

func (x *Pb_MessageHeader) GetIntValues() []int32 {
	if x != nil {
		return x.IntValues
	}
	return nil
}

func (x *Pb_MessageHeader) GetDoubleValues() []float64 {
	if x != nil {
		return x.DoubleValues
	}
	return nil
}

func (x *Pb_MessageHeader) GetStringValues() []string {
	if x != nil {
		return x.StringValues
	}
	return nil
}

type Pb_Body_Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitHashCode *string `protobuf:"bytes,1,req,name=init_hash_code,json=initHashCode" json:"init_hash_code,omitempty"` // IA have to sent this string back to GUI in pb_Body_GetStatusResponse
}

func (x *Pb_Body_Init) Reset() {
	*x = Pb_Body_Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_Init) ProtoMessage() {}

func (x *Pb_Body_Init) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_Init.ProtoReflect.Descriptor instead.
func (*Pb_Body_Init) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{2}
}

func (x *Pb_Body_Init) GetInitHashCode() string {
	if x != nil && x.InitHashCode != nil {
		return *x.InitHashCode
	}
	return ""
}

type Pb_Body_GetStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitHashCode       *string                                        `protobuf:"bytes,1,req,name=init_hash_code,json=initHashCode" json:"init_hash_code,omitempty"`                      // was set in message INIT
	InitTimestampUtcMs *int64                                         `protobuf:"varint,2,req,name=init_timestamp_utc_ms,json=initTimestampUtcMs" json:"init_timestamp_utc_ms,omitempty"` // timestamp when program was initialized - unix like datetime value (UTC) in milliseconds since 1970/1/1
	ConfigurationSets  []string                                       `protobuf:"bytes,3,rep,name=configuration_sets,json=configurationSets" json:"configuration_sets,omitempty"`         // array of available configuration sets
	ImagesInProcess    []*Pb_Body_GetStatus_ResponsePb_ImageInProcess `protobuf:"bytes,4,rep,name=images_in_process,json=imagesInProcess" json:"images_in_process,omitempty"`             // list of images currently in process
}

func (x *Pb_Body_GetStatus_Response) Reset() {
	*x = Pb_Body_GetStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetStatus_Response) ProtoMessage() {}

func (x *Pb_Body_GetStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetStatus_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetStatus_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{3}
}

func (x *Pb_Body_GetStatus_Response) GetInitHashCode() string {
	if x != nil && x.InitHashCode != nil {
		return *x.InitHashCode
	}
	return ""
}

func (x *Pb_Body_GetStatus_Response) GetInitTimestampUtcMs() int64 {
	if x != nil && x.InitTimestampUtcMs != nil {
		return *x.InitTimestampUtcMs
	}
	return 0
}

func (x *Pb_Body_GetStatus_Response) GetConfigurationSets() []string {
	if x != nil {
		return x.ConfigurationSets
	}
	return nil
}

func (x *Pb_Body_GetStatus_Response) GetImagesInProcess() []*Pb_Body_GetStatus_ResponsePb_ImageInProcess {
	if x != nil {
		return x.ImagesInProcess
	}
	return nil
}

type Pb_Body_GetVersion_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramName    *string `protobuf:"bytes,1,req,name=program_name,json=programName" json:"program_name,omitempty"`          // name of the program
	ProgramVersion *string `protobuf:"bytes,2,req,name=program_version,json=programVersion" json:"program_version,omitempty"` // version: major.minor.release
}

func (x *Pb_Body_GetVersion_Response) Reset() {
	*x = Pb_Body_GetVersion_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetVersion_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetVersion_Response) ProtoMessage() {}

func (x *Pb_Body_GetVersion_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetVersion_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetVersion_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{4}
}

func (x *Pb_Body_GetVersion_Response) GetProgramName() string {
	if x != nil && x.ProgramName != nil {
		return *x.ProgramName
	}
	return ""
}

func (x *Pb_Body_GetVersion_Response) GetProgramVersion() string {
	if x != nil && x.ProgramVersion != nil {
		return *x.ProgramVersion
	}
	return ""
}

type Pb_Body_GetPresets_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetNameList []string `protobuf:"bytes,1,rep,name=preset_name_list,json=presetNameList" json:"preset_name_list,omitempty"` // list of available presets
}

func (x *Pb_Body_GetPresets_Response) Reset() {
	*x = Pb_Body_GetPresets_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresets_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresets_Response) ProtoMessage() {}

func (x *Pb_Body_GetPresets_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresets_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresets_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{5}
}

func (x *Pb_Body_GetPresets_Response) GetPresetNameList() []string {
	if x != nil {
		return x.PresetNameList
	}
	return nil
}

type Pb_Body_GetPresetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetName *string `protobuf:"bytes,1,req,name=preset_name,json=presetName" json:"preset_name,omitempty"` // name of the preset of which detailed information should be returned
}

func (x *Pb_Body_GetPresetInfo) Reset() {
	*x = Pb_Body_GetPresetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresetInfo) ProtoMessage() {}

func (x *Pb_Body_GetPresetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresetInfo.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresetInfo) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{6}
}

func (x *Pb_Body_GetPresetInfo) GetPresetName() string {
	if x != nil && x.PresetName != nil {
		return *x.PresetName
	}
	return ""
}

type Pb_Body_GetPresetInfo_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetInfo *Pb_Body_GetPresetInfo_ResponsePb_PresetItem `protobuf:"bytes,1,opt,name=preset_info,json=presetInfo" json:"preset_info,omitempty"` // information of the requested preset (or null if not available)
}

func (x *Pb_Body_GetPresetInfo_Response) Reset() {
	*x = Pb_Body_GetPresetInfo_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresetInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresetInfo_Response) ProtoMessage() {}

func (x *Pb_Body_GetPresetInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresetInfo_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresetInfo_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{7}
}

func (x *Pb_Body_GetPresetInfo_Response) GetPresetInfo() *Pb_Body_GetPresetInfo_ResponsePb_PresetItem {
	if x != nil {
		return x.PresetInfo
	}
	return nil
}

// type will be used in SetConfig, GetConfigParams_Response and SetConfigParams
type Pb_ConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamName *string       `protobuf:"bytes,1,req,name=param_name,json=paramName" json:"param_name,omitempty"`                      // name of this parameter
	Datatype  *DataTypeEnum `protobuf:"varint,2,req,name=datatype,enum=image_analysis.DataTypeEnum,def=0" json:"datatype,omitempty"` // type of this parameter (string, double, json)
	ValString *string       `protobuf:"bytes,3,opt,name=val_string,json=valString" json:"val_string,omitempty"`                      // value of this parameter if it's a string value
	ValJson   *string       `protobuf:"bytes,4,opt,name=val_json,json=valJson" json:"val_json,omitempty"`                            // value of this parameter if it's a JSON value
	ValDouble *float64      `protobuf:"fixed64,5,opt,name=val_double,json=valDouble,def=-1e+99" json:"val_double,omitempty"`         // value of this parameter if it's a double value
}

// Default values for Pb_ConfigParam fields.
const (
	Default_Pb_ConfigParam_Datatype  = DataTypeEnum_UNDEFINED_DT
	Default_Pb_ConfigParam_ValDouble = float64(-1e+99)
)

func (x *Pb_ConfigParam) Reset() {
	*x = Pb_ConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_ConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_ConfigParam) ProtoMessage() {}

func (x *Pb_ConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_ConfigParam.ProtoReflect.Descriptor instead.
func (*Pb_ConfigParam) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{8}
}

func (x *Pb_ConfigParam) GetParamName() string {
	if x != nil && x.ParamName != nil {
		return *x.ParamName
	}
	return ""
}

func (x *Pb_ConfigParam) GetDatatype() DataTypeEnum {
	if x != nil && x.Datatype != nil {
		return *x.Datatype
	}
	return Default_Pb_ConfigParam_Datatype
}

func (x *Pb_ConfigParam) GetValString() string {
	if x != nil && x.ValString != nil {
		return *x.ValString
	}
	return ""
}

func (x *Pb_ConfigParam) GetValJson() string {
	if x != nil && x.ValJson != nil {
		return *x.ValJson
	}
	return ""
}

func (x *Pb_ConfigParam) GetValDouble() float64 {
	if x != nil && x.ValDouble != nil {
		return *x.ValDouble
	}
	return Default_Pb_ConfigParam_ValDouble
}

type Pb_Body_SetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigsetName *string                       `protobuf:"bytes,1,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"` // name to identify a configuration set (can be freely given by GUI)
	CellInfo      *Pb_Body_SetConfigPb_CellInfo `protobuf:"bytes,2,opt,name=cell_info,json=cellInfo" json:"cell_info,omitempty"`                // information for used cell type
	PresetName    *string                       `protobuf:"bytes,3,opt,name=preset_name,json=presetName" json:"preset_name,omitempty"`          // name of the preset which should be used (use a default one when null - or return an error when there is no default available)
	ConfigParams  []*Pb_ConfigParam             `protobuf:"bytes,4,rep,name=config_params,json=configParams" json:"config_params,omitempty"`    // list of configuration parameters used in this configuration set  (definition of these parameters are not part of this protocol)
}

func (x *Pb_Body_SetConfig) Reset() {
	*x = Pb_Body_SetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_SetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_SetConfig) ProtoMessage() {}

func (x *Pb_Body_SetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_SetConfig.ProtoReflect.Descriptor instead.
func (*Pb_Body_SetConfig) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{9}
}

func (x *Pb_Body_SetConfig) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_SetConfig) GetCellInfo() *Pb_Body_SetConfigPb_CellInfo {
	if x != nil {
		return x.CellInfo
	}
	return nil
}

func (x *Pb_Body_SetConfig) GetPresetName() string {
	if x != nil && x.PresetName != nil {
		return *x.PresetName
	}
	return ""
}

func (x *Pb_Body_SetConfig) GetConfigParams() []*Pb_ConfigParam {
	if x != nil {
		return x.ConfigParams
	}
	return nil
}

type Pb_Body_RemoveConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigsetName *string `protobuf:"bytes,1,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"` // remove given configuration set or all configuration sets when configset_name=="ALLCONFIGS"
}

func (x *Pb_Body_RemoveConfig) Reset() {
	*x = Pb_Body_RemoveConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_RemoveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_RemoveConfig) ProtoMessage() {}

func (x *Pb_Body_RemoveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_RemoveConfig.ProtoReflect.Descriptor instead.
func (*Pb_Body_RemoveConfig) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{10}
}

func (x *Pb_Body_RemoveConfig) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

type Pb_Body_GetConfigParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigsetName *string  `protobuf:"bytes,1,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"`   // name of configuration set
	ParamNameList []string `protobuf:"bytes,2,rep,name=param_name_list,json=paramNameList" json:"param_name_list,omitempty"` // list of parameters which should be returned
}

func (x *Pb_Body_GetConfigParams) Reset() {
	*x = Pb_Body_GetConfigParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetConfigParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetConfigParams) ProtoMessage() {}

func (x *Pb_Body_GetConfigParams) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetConfigParams.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetConfigParams) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{11}
}

func (x *Pb_Body_GetConfigParams) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_GetConfigParams) GetParamNameList() []string {
	if x != nil {
		return x.ParamNameList
	}
	return nil
}

type Pb_Body_GetConfigParams_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigsetName *string           `protobuf:"bytes,1,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"` // name of configuration set
	ConfigParams  []*Pb_ConfigParam `protobuf:"bytes,2,rep,name=config_params,json=configParams" json:"config_params,omitempty"`    // the values of the requested parameters
}

func (x *Pb_Body_GetConfigParams_Response) Reset() {
	*x = Pb_Body_GetConfigParams_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetConfigParams_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetConfigParams_Response) ProtoMessage() {}

func (x *Pb_Body_GetConfigParams_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetConfigParams_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetConfigParams_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{12}
}

func (x *Pb_Body_GetConfigParams_Response) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_GetConfigParams_Response) GetConfigParams() []*Pb_ConfigParam {
	if x != nil {
		return x.ConfigParams
	}
	return nil
}

type Pb_Body_SetConfigParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigsetName *string           `protobuf:"bytes,1,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"` // name of configuration set
	ConfigParams  []*Pb_ConfigParam `protobuf:"bytes,2,rep,name=config_params,json=configParams" json:"config_params,omitempty"`    // the values of the parameters to set
}

func (x *Pb_Body_SetConfigParams) Reset() {
	*x = Pb_Body_SetConfigParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_SetConfigParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_SetConfigParams) ProtoMessage() {}

func (x *Pb_Body_SetConfigParams) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_SetConfigParams.ProtoReflect.Descriptor instead.
func (*Pb_Body_SetConfigParams) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{13}
}

func (x *Pb_Body_SetConfigParams) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_SetConfigParams) GetConfigParams() []*Pb_ConfigParam {
	if x != nil {
		return x.ConfigParams
	}
	return nil
}

type Pb_ImageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageFileFormat *Pb_ImageDataPb_FileFormatEnum `protobuf:"varint,1,req,name=image_file_format,json=imageFileFormat,enum=image_analysis.Pb_ImageDataPb_FileFormatEnum" json:"image_file_format,omitempty"` // file format of image_data
	ImageData       []byte                         `protobuf:"bytes,2,opt,name=image_data,json=imageData" json:"image_data,omitempty"`                                                                        // byte array of the image data
	Width           *int32                         `protobuf:"varint,3,opt,name=width,def=-1" json:"width,omitempty"`                                                                                         // width of image (only needed when raw format used)
	Height          *int32                         `protobuf:"varint,4,opt,name=height,def=-1" json:"height,omitempty"`                                                                                       // height of image (only needed when raw format used)
	Bitdepth        *int32                         `protobuf:"varint,5,opt,name=bitdepth,def=-1" json:"bitdepth,omitempty"`                                                                                   // bit depth of image - 8 or 16 bit for bw images, 24bit for RGB color images (only needed when raw format used)
}

// Default values for Pb_ImageData fields.
const (
	Default_Pb_ImageData_Width    = int32(-1)
	Default_Pb_ImageData_Height   = int32(-1)
	Default_Pb_ImageData_Bitdepth = int32(-1)
)

func (x *Pb_ImageData) Reset() {
	*x = Pb_ImageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_ImageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_ImageData) ProtoMessage() {}

func (x *Pb_ImageData) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_ImageData.ProtoReflect.Descriptor instead.
func (*Pb_ImageData) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{14}
}

func (x *Pb_ImageData) GetImageFileFormat() Pb_ImageDataPb_FileFormatEnum {
	if x != nil && x.ImageFileFormat != nil {
		return *x.ImageFileFormat
	}
	return Pb_ImageData_UNDEFINED_FF
}

func (x *Pb_ImageData) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *Pb_ImageData) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return Default_Pb_ImageData_Width
}

func (x *Pb_ImageData) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return Default_Pb_ImageData_Height
}

func (x *Pb_ImageData) GetBitdepth() int32 {
	if x != nil && x.Bitdepth != nil {
		return *x.Bitdepth
	}
	return Default_Pb_ImageData_Bitdepth
}

type Pb_MultiImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`   // name of the image in lower case
	Image *Pb_ImageData `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"` // image data
}

func (x *Pb_MultiImages) Reset() {
	*x = Pb_MultiImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_MultiImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_MultiImages) ProtoMessage() {}

func (x *Pb_MultiImages) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_MultiImages.ProtoReflect.Descriptor instead.
func (*Pb_MultiImages) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{15}
}

func (x *Pb_MultiImages) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Pb_MultiImages) GetImage() *Pb_ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

type Pb_AdditionalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumericValues []*Pb_AdditionalDataPb_NumericValue `protobuf:"bytes,1,rep,name=numeric_values,json=numericValues" json:"numeric_values,omitempty"`
	StringValues  []*Pb_AdditionalDataPb_StringValue  `protobuf:"bytes,2,rep,name=string_values,json=stringValues" json:"string_values,omitempty"`
}

func (x *Pb_AdditionalData) Reset() {
	*x = Pb_AdditionalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_AdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_AdditionalData) ProtoMessage() {}

func (x *Pb_AdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_AdditionalData.ProtoReflect.Descriptor instead.
func (*Pb_AdditionalData) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{16}
}

func (x *Pb_AdditionalData) GetNumericValues() []*Pb_AdditionalDataPb_NumericValue {
	if x != nil {
		return x.NumericValues
	}
	return nil
}

func (x *Pb_AdditionalData) GetStringValues() []*Pb_AdditionalDataPb_StringValue {
	if x != nil {
		return x.StringValues
	}
	return nil
}

type Pb_Body_AnalyzeImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumberImage *string            `protobuf:"bytes,1,req,name=serial_number_image,json=serialNumberImage" json:"serial_number_image,omitempty"` // serial number of the measurement (GUID)
	ConfigsetName     *string            `protobuf:"bytes,2,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"`               // name of configuration set which should be used for image analyzing
	Image             *Pb_ImageData      `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`                                                    // image which have to be analyzed (not needed when 'multiple_images' are used)
	AdditionalData    *Pb_AdditionalData `protobuf:"bytes,4,opt,name=additional_data,json=additionalData" json:"additional_data,omitempty"`            // additional information about this cell/measurement, e.g. Isc, Voc etc. (could be enabled/disabled in GUI)
	MultiImages       []*Pb_MultiImages  `protobuf:"bytes,5,rep,name=multi_images,json=multiImages" json:"multi_images,omitempty"`                     // use this instead of 'image' to transfer multiple images for combined analysis possibilities
}

func (x *Pb_Body_AnalyzeImage) Reset() {
	*x = Pb_Body_AnalyzeImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_AnalyzeImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_AnalyzeImage) ProtoMessage() {}

func (x *Pb_Body_AnalyzeImage) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_AnalyzeImage.ProtoReflect.Descriptor instead.
func (*Pb_Body_AnalyzeImage) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{17}
}

func (x *Pb_Body_AnalyzeImage) GetSerialNumberImage() string {
	if x != nil && x.SerialNumberImage != nil {
		return *x.SerialNumberImage
	}
	return ""
}

func (x *Pb_Body_AnalyzeImage) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_AnalyzeImage) GetImage() *Pb_ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Pb_Body_AnalyzeImage) GetAdditionalData() *Pb_AdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *Pb_Body_AnalyzeImage) GetMultiImages() []*Pb_MultiImages {
	if x != nil {
		return x.MultiImages
	}
	return nil
}

type Pb_Body_ImageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumberImage   *string                                    `protobuf:"bytes,1,req,name=serial_number_image,json=serialNumberImage" json:"serial_number_image,omitempty"`       // serial number of the measurement (GUID)
	ConfigsetName       *string                                    `protobuf:"bytes,2,req,name=configset_name,json=configsetName" json:"configset_name,omitempty"`                     // name of config set which was used for image analysis
	Features            []*Pb_Body_ImageResultPb_Feature           `protobuf:"bytes,3,rep,name=features" json:"features,omitempty"`                                                    // array of found feature types
	ImageClassification *Pb_Body_ImageResultPb_ImageClassification `protobuf:"bytes,4,opt,name=image_classification,json=imageClassification" json:"image_classification,omitempty"`   // optional final classification of this image
	ImagePlain          *Pb_ImageData                              `protobuf:"bytes,5,opt,name=image_plain,json=imagePlain" json:"image_plain,omitempty"`                              // option to return the plain image (e.g. when the image transfered in AnalyzeImage was changed)
	ImageOverlaid       *Pb_ImageData                              `protobuf:"bytes,6,opt,name=image_overlaid,json=imageOverlaid" json:"image_overlaid,omitempty"`                     // option to return the image overlaid with the found defects
	MultiImagesPlain    []*Pb_MultiImages                          `protobuf:"bytes,7,rep,name=multi_images_plain,json=multiImagesPlain" json:"multi_images_plain,omitempty"`          // option to return the plain images for every transfered image in 'multi_images' from  AnalyzeImage
	MultiImagesOverlaid []*Pb_MultiImages                          `protobuf:"bytes,8,rep,name=multi_images_overlaid,json=multiImagesOverlaid" json:"multi_images_overlaid,omitempty"` // option to return the image overlaid with the found defects for every transfered image in 'multi_images' from  AnalyzeImage
}

func (x *Pb_Body_ImageResult) Reset() {
	*x = Pb_Body_ImageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResult) ProtoMessage() {}

func (x *Pb_Body_ImageResult) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResult.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResult) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18}
}

func (x *Pb_Body_ImageResult) GetSerialNumberImage() string {
	if x != nil && x.SerialNumberImage != nil {
		return *x.SerialNumberImage
	}
	return ""
}

func (x *Pb_Body_ImageResult) GetConfigsetName() string {
	if x != nil && x.ConfigsetName != nil {
		return *x.ConfigsetName
	}
	return ""
}

func (x *Pb_Body_ImageResult) GetFeatures() []*Pb_Body_ImageResultPb_Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Pb_Body_ImageResult) GetImageClassification() *Pb_Body_ImageResultPb_ImageClassification {
	if x != nil {
		return x.ImageClassification
	}
	return nil
}

func (x *Pb_Body_ImageResult) GetImagePlain() *Pb_ImageData {
	if x != nil {
		return x.ImagePlain
	}
	return nil
}

func (x *Pb_Body_ImageResult) GetImageOverlaid() *Pb_ImageData {
	if x != nil {
		return x.ImageOverlaid
	}
	return nil
}

func (x *Pb_Body_ImageResult) GetMultiImagesPlain() []*Pb_MultiImages {
	if x != nil {
		return x.MultiImagesPlain
	}
	return nil
}

func (x *Pb_Body_ImageResult) GetMultiImagesOverlaid() []*Pb_MultiImages {
	if x != nil {
		return x.MultiImagesOverlaid
	}
	return nil
}

type Pb_Body_InfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoType    *Pb_Body_InfoMessagePb_InfoTypeEnum `protobuf:"varint,1,req,name=info_type,json=infoType,enum=image_analysis.Pb_Body_InfoMessagePb_InfoTypeEnum" json:"info_type,omitempty"`
	NumericCode *int32                              `protobuf:"varint,2,req,name=numeric_code,json=numericCode" json:"numeric_code,omitempty"`
	InfoText    *string                             `protobuf:"bytes,3,req,name=info_text,json=infoText" json:"info_text,omitempty"`
}

func (x *Pb_Body_InfoMessage) Reset() {
	*x = Pb_Body_InfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_InfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_InfoMessage) ProtoMessage() {}

func (x *Pb_Body_InfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_InfoMessage.ProtoReflect.Descriptor instead.
func (*Pb_Body_InfoMessage) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{19}
}

func (x *Pb_Body_InfoMessage) GetInfoType() Pb_Body_InfoMessagePb_InfoTypeEnum {
	if x != nil && x.InfoType != nil {
		return *x.InfoType
	}
	return Pb_Body_InfoMessage_UNDEFINED_IT
}

func (x *Pb_Body_InfoMessage) GetNumericCode() int32 {
	if x != nil && x.NumericCode != nil {
		return *x.NumericCode
	}
	return 0
}

func (x *Pb_Body_InfoMessage) GetInfoText() string {
	if x != nil && x.InfoText != nil {
		return *x.InfoText
	}
	return ""
}

type Pb_Body_GetConfigFile_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFileName       *string  `protobuf:"bytes,1,req,name=config_file_name,json=configFileName" json:"config_file_name,omitempty"`
	ConfigContentJson    *string  `protobuf:"bytes,2,req,name=config_content_json,json=configContentJson" json:"config_content_json,omitempty"`
	AvailableConfigFiles []string `protobuf:"bytes,3,rep,name=available_config_files,json=availableConfigFiles" json:"available_config_files,omitempty"`
	CurrentDefaultFile   *string  `protobuf:"bytes,4,req,name=current_default_file,json=currentDefaultFile" json:"current_default_file,omitempty"`
}

func (x *Pb_Body_GetConfigFile_Response) Reset() {
	*x = Pb_Body_GetConfigFile_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetConfigFile_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetConfigFile_Response) ProtoMessage() {}

func (x *Pb_Body_GetConfigFile_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetConfigFile_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetConfigFile_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{20}
}

func (x *Pb_Body_GetConfigFile_Response) GetConfigFileName() string {
	if x != nil && x.ConfigFileName != nil {
		return *x.ConfigFileName
	}
	return ""
}

func (x *Pb_Body_GetConfigFile_Response) GetConfigContentJson() string {
	if x != nil && x.ConfigContentJson != nil {
		return *x.ConfigContentJson
	}
	return ""
}

func (x *Pb_Body_GetConfigFile_Response) GetAvailableConfigFiles() []string {
	if x != nil {
		return x.AvailableConfigFiles
	}
	return nil
}

func (x *Pb_Body_GetConfigFile_Response) GetCurrentDefaultFile() string {
	if x != nil && x.CurrentDefaultFile != nil {
		return *x.CurrentDefaultFile
	}
	return ""
}

type Pb_Body_SetConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewConfigFileName *string `protobuf:"bytes,1,req,name=new_config_file_name,json=newConfigFileName" json:"new_config_file_name,omitempty"`
	SetAsDefault      *bool   `protobuf:"varint,2,req,name=set_as_default,json=setAsDefault" json:"set_as_default,omitempty"`
}

func (x *Pb_Body_SetConfigFile) Reset() {
	*x = Pb_Body_SetConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_SetConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_SetConfigFile) ProtoMessage() {}

func (x *Pb_Body_SetConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_SetConfigFile.ProtoReflect.Descriptor instead.
func (*Pb_Body_SetConfigFile) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{21}
}

func (x *Pb_Body_SetConfigFile) GetNewConfigFileName() string {
	if x != nil && x.NewConfigFileName != nil {
		return *x.NewConfigFileName
	}
	return ""
}

func (x *Pb_Body_SetConfigFile) GetSetAsDefault() bool {
	if x != nil && x.SetAsDefault != nil {
		return *x.SetAsDefault
	}
	return false
}

type Pb_Body_ModifyConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFileName    *string `protobuf:"bytes,1,req,name=config_file_name,json=configFileName" json:"config_file_name,omitempty"` // name of the config file; if the file doesn't exist it will be created; if empty, the currently loaded config will be modified
	ConfigContentJson *string `protobuf:"bytes,2,req,name=config_content_json,json=configContentJson" json:"config_content_json,omitempty"`
}

func (x *Pb_Body_ModifyConfigFile) Reset() {
	*x = Pb_Body_ModifyConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ModifyConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ModifyConfigFile) ProtoMessage() {}

func (x *Pb_Body_ModifyConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ModifyConfigFile.ProtoReflect.Descriptor instead.
func (*Pb_Body_ModifyConfigFile) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{22}
}

func (x *Pb_Body_ModifyConfigFile) GetConfigFileName() string {
	if x != nil && x.ConfigFileName != nil {
		return *x.ConfigFileName
	}
	return ""
}

func (x *Pb_Body_ModifyConfigFile) GetConfigContentJson() string {
	if x != nil && x.ConfigContentJson != nil {
		return *x.ConfigContentJson
	}
	return ""
}

type Pb_Body_GetStatistics_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatisticsCsv *string `protobuf:"bytes,1,req,name=statistics_csv,json=statisticsCsv" json:"statistics_csv,omitempty"`
}

func (x *Pb_Body_GetStatistics_Response) Reset() {
	*x = Pb_Body_GetStatistics_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetStatistics_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetStatistics_Response) ProtoMessage() {}

func (x *Pb_Body_GetStatistics_Response) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetStatistics_Response.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetStatistics_Response) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{23}
}

func (x *Pb_Body_GetStatistics_Response) GetStatisticsCsv() string {
	if x != nil && x.StatisticsCsv != nil {
		return *x.StatisticsCsv
	}
	return ""
}

type Pb_Body_GetStatus_ResponsePb_ImageInProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumberImage    *string `protobuf:"bytes,1,req,name=serial_number_image,json=serialNumberImage" json:"serial_number_image,omitempty"`
	ConfigurationSetName *string `protobuf:"bytes,2,req,name=configuration_set_name,json=configurationSetName" json:"configuration_set_name,omitempty"`
}

func (x *Pb_Body_GetStatus_ResponsePb_ImageInProcess) Reset() {
	*x = Pb_Body_GetStatus_ResponsePb_ImageInProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetStatus_ResponsePb_ImageInProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetStatus_ResponsePb_ImageInProcess) ProtoMessage() {}

func (x *Pb_Body_GetStatus_ResponsePb_ImageInProcess) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetStatus_ResponsePb_ImageInProcess.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetStatus_ResponsePb_ImageInProcess) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Pb_Body_GetStatus_ResponsePb_ImageInProcess) GetSerialNumberImage() string {
	if x != nil && x.SerialNumberImage != nil {
		return *x.SerialNumberImage
	}
	return ""
}

func (x *Pb_Body_GetStatus_ResponsePb_ImageInProcess) GetConfigurationSetName() string {
	if x != nil && x.ConfigurationSetName != nil {
		return *x.ConfigurationSetName
	}
	return ""
}

type Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`   // name of additional info item
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // string value of additional info item
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) Reset() {
	*x = Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) ProtoMessage() {}

func (x *Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamName *string                                       `protobuf:"bytes,1,req,name=param_name,json=paramName" json:"param_name,omitempty"`                                                        // name of the parameters
	Datatype  *DataTypeEnum                                 `protobuf:"varint,2,req,name=datatype,enum=image_analysis.DataTypeEnum,def=0" json:"datatype,omitempty"`                                   // data type of this parameter
	Direction *Pb_Body_GetPresetInfo_Response_DirectionEnum `protobuf:"varint,3,req,name=direction,enum=image_analysis.Pb_Body_GetPresetInfo_Response_DirectionEnum,def=0" json:"direction,omitempty"` // communication direction of this parameter (can be in, out or in/out)
}

// Default values for Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem fields.
const (
	Default_Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem_Datatype  = DataTypeEnum_UNDEFINED_DT
	Default_Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem_Direction = Pb_Body_GetPresetInfo_Response_UNDEFINED_DR
)

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) Reset() {
	*x = Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) ProtoMessage() {}

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) GetParamName() string {
	if x != nil && x.ParamName != nil {
		return *x.ParamName
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) GetDatatype() DataTypeEnum {
	if x != nil && x.Datatype != nil {
		return *x.Datatype
	}
	return Default_Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem_Datatype
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem) GetDirection() Pb_Body_GetPresetInfo_Response_DirectionEnum {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return Default_Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem_Direction
}

type Pb_Body_GetPresetInfo_ResponsePb_PresetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetName      *string                                           `protobuf:"bytes,1,req,name=preset_name,json=presetName" json:"preset_name,omitempty"`                // unique preset name
	Date            *string                                           `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`                                              // optional date string of this preset
	Version         *string                                           `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`                                        // optional version string of this preset
	Comment         *string                                           `protobuf:"bytes,4,opt,name=comment" json:"comment,omitempty"`                                        // optional comment of this preset
	FeatureTypes    []string                                          `protobuf:"bytes,5,rep,name=feature_types,json=featureTypes" json:"feature_types,omitempty"`          // list of supported feature types (e.g. Cracks, Finger_Interuptions, etc.)
	AdditionalInfos []*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem   `protobuf:"bytes,6,rep,name=additional_infos,json=additionalInfos" json:"additional_infos,omitempty"` // list of additional information of this preset
	ParamList       []*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem `protobuf:"bytes,7,rep,name=param_list,json=paramList" json:"param_list,omitempty"`                   // list of available parameters of this preset
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) Reset() {
	*x = Pb_Body_GetPresetInfo_ResponsePb_PresetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_GetPresetInfo_ResponsePb_PresetItem) ProtoMessage() {}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_GetPresetInfo_ResponsePb_PresetItem.ProtoReflect.Descriptor instead.
func (*Pb_Body_GetPresetInfo_ResponsePb_PresetItem) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetPresetName() string {
	if x != nil && x.PresetName != nil {
		return *x.PresetName
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetFeatureTypes() []string {
	if x != nil {
		return x.FeatureTypes
	}
	return nil
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetAdditionalInfos() []*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem {
	if x != nil {
		return x.AdditionalInfos
	}
	return nil
}

func (x *Pb_Body_GetPresetInfo_ResponsePb_PresetItem) GetParamList() []*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem {
	if x != nil {
		return x.ParamList
	}
	return nil
}

type Pb_Body_SetConfigPb_CellInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusbarCount       *int32                                                `protobuf:"varint,1,opt,name=busbar_count,json=busbarCount,def=-1" json:"busbar_count,omitempty"` // number of busbars
	BusbarOrientation *Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum `protobuf:"varint,2,opt,name=busbar_orientation,json=busbarOrientation,enum=image_analysis.Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum,def=0" json:"busbar_orientation,omitempty"`
	CrystalType       *Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum       `protobuf:"varint,3,opt,name=crystal_type,json=crystalType,enum=image_analysis.Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum,def=0" json:"crystal_type,omitempty"`
}

// Default values for Pb_Body_SetConfigPb_CellInfo fields.
const (
	Default_Pb_Body_SetConfigPb_CellInfo_BusbarCount       = int32(-1)
	Default_Pb_Body_SetConfigPb_CellInfo_BusbarOrientation = Pb_Body_SetConfigPb_CellInfo_UNDEFINED_BO
	Default_Pb_Body_SetConfigPb_CellInfo_CrystalType       = Pb_Body_SetConfigPb_CellInfo_UNDEFINED_CT
)

func (x *Pb_Body_SetConfigPb_CellInfo) Reset() {
	*x = Pb_Body_SetConfigPb_CellInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_SetConfigPb_CellInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_SetConfigPb_CellInfo) ProtoMessage() {}

func (x *Pb_Body_SetConfigPb_CellInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_SetConfigPb_CellInfo.ProtoReflect.Descriptor instead.
func (*Pb_Body_SetConfigPb_CellInfo) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Pb_Body_SetConfigPb_CellInfo) GetBusbarCount() int32 {
	if x != nil && x.BusbarCount != nil {
		return *x.BusbarCount
	}
	return Default_Pb_Body_SetConfigPb_CellInfo_BusbarCount
}

func (x *Pb_Body_SetConfigPb_CellInfo) GetBusbarOrientation() Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum {
	if x != nil && x.BusbarOrientation != nil {
		return *x.BusbarOrientation
	}
	return Default_Pb_Body_SetConfigPb_CellInfo_BusbarOrientation
}

func (x *Pb_Body_SetConfigPb_CellInfo) GetCrystalType() Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum {
	if x != nil && x.CrystalType != nil {
		return *x.CrystalType
	}
	return Default_Pb_Body_SetConfigPb_CellInfo_CrystalType
}

type Pb_AdditionalDataPb_NumericValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`     // name of the transfered parameter (e.g. Voc, Isc, ...)
	Unit  *string  `protobuf:"bytes,2,req,name=unit" json:"unit,omitempty"`     // unit of this parameter
	Value *float64 `protobuf:"fixed64,3,req,name=value" json:"value,omitempty"` // value of this parameter   (-1e99 means NaN)
}

func (x *Pb_AdditionalDataPb_NumericValue) Reset() {
	*x = Pb_AdditionalDataPb_NumericValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_AdditionalDataPb_NumericValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_AdditionalDataPb_NumericValue) ProtoMessage() {}

func (x *Pb_AdditionalDataPb_NumericValue) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_AdditionalDataPb_NumericValue.ProtoReflect.Descriptor instead.
func (*Pb_AdditionalDataPb_NumericValue) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Pb_AdditionalDataPb_NumericValue) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Pb_AdditionalDataPb_NumericValue) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *Pb_AdditionalDataPb_NumericValue) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type Pb_AdditionalDataPb_StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`   // name of the transfered parameter in lower case (e.g. celltypename, ...)
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // value of this parameter
}

func (x *Pb_AdditionalDataPb_StringValue) Reset() {
	*x = Pb_AdditionalDataPb_StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_AdditionalDataPb_StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_AdditionalDataPb_StringValue) ProtoMessage() {}

func (x *Pb_AdditionalDataPb_StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_AdditionalDataPb_StringValue.ProtoReflect.Descriptor instead.
func (*Pb_AdditionalDataPb_StringValue) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{16, 1}
}

func (x *Pb_AdditionalDataPb_StringValue) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Pb_AdditionalDataPb_StringValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Pb_Body_ImageResultPb_Rect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XPos   *float64 `protobuf:"fixed64,1,opt,name=x_pos,json=xPos" json:"x_pos,omitempty"` // upper left corner
	YPos   *float64 `protobuf:"fixed64,2,opt,name=y_pos,json=yPos" json:"y_pos,omitempty"`
	Width  *float64 `protobuf:"fixed64,3,opt,name=width" json:"width,omitempty"`
	Height *float64 `protobuf:"fixed64,4,opt,name=height" json:"height,omitempty"`
}

func (x *Pb_Body_ImageResultPb_Rect) Reset() {
	*x = Pb_Body_ImageResultPb_Rect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_Rect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_Rect) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_Rect) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_Rect.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_Rect) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Pb_Body_ImageResultPb_Rect) GetXPos() float64 {
	if x != nil && x.XPos != nil {
		return *x.XPos
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_Rect) GetYPos() float64 {
	if x != nil && x.YPos != nil {
		return *x.YPos
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_Rect) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_Rect) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type Pb_Body_ImageResultPb_DENK_Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y *float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
}

func (x *Pb_Body_ImageResultPb_DENK_Point) Reset() {
	*x = Pb_Body_ImageResultPb_DENK_Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_DENK_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_DENK_Point) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_DENK_Point) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_DENK_Point.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_DENK_Point) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 1}
}

func (x *Pb_Body_ImageResultPb_DENK_Point) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_DENK_Point) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type Pb_Body_ImageResultPb_DENK_MinimalBoundingBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterX *float64 `protobuf:"fixed64,1,opt,name=center_x,json=centerX" json:"center_x,omitempty"`
	CenterY *float64 `protobuf:"fixed64,2,opt,name=center_y,json=centerY" json:"center_y,omitempty"`
	Width   *float64 `protobuf:"fixed64,3,opt,name=width" json:"width,omitempty"`
	Height  *float64 `protobuf:"fixed64,4,opt,name=height" json:"height,omitempty"`
	Angle   *float64 `protobuf:"fixed64,5,opt,name=angle" json:"angle,omitempty"`
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) Reset() {
	*x = Pb_Body_ImageResultPb_DENK_MinimalBoundingBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_DENK_MinimalBoundingBox.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 2}
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) GetCenterX() float64 {
	if x != nil && x.CenterX != nil {
		return *x.CenterX
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) GetCenterY() float64 {
	if x != nil && x.CenterY != nil {
		return *x.CenterY
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox) GetAngle() float64 {
	if x != nil && x.Angle != nil {
		return *x.Angle
	}
	return 0
}

type Pb_Body_ImageResultPb_DENK_OcrCharacter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character   *string  `protobuf:"bytes,1,opt,name=character" json:"character,omitempty"`
	Probability *float64 `protobuf:"fixed64,2,opt,name=probability" json:"probability,omitempty"`
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacter) Reset() {
	*x = Pb_Body_ImageResultPb_DENK_OcrCharacter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_DENK_OcrCharacter) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacter) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_DENK_OcrCharacter.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_DENK_OcrCharacter) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 3}
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacter) GetCharacter() string {
	if x != nil && x.Character != nil {
		return *x.Character
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacter) GetProbability() float64 {
	if x != nil && x.Probability != nil {
		return *x.Probability
	}
	return 0
}

type Pb_Body_ImageResultPb_DENK_OcrCharacterPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OcrCharacter []*Pb_Body_ImageResultPb_DENK_OcrCharacter `protobuf:"bytes,1,rep,name=ocr_character,json=ocrCharacter" json:"ocr_character,omitempty"`
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) Reset() {
	*x = Pb_Body_ImageResultPb_DENK_OcrCharacterPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_DENK_OcrCharacterPosition.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 4}
}

func (x *Pb_Body_ImageResultPb_DENK_OcrCharacterPosition) GetOcrCharacter() []*Pb_Body_ImageResultPb_DENK_OcrCharacter {
	if x != nil {
		return x.OcrCharacter
	}
	return nil
}

type Pb_Body_ImageResultPb_Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureTypeName *string                                        `protobuf:"bytes,1,req,name=feature_type_name,json=featureTypeName" json:"feature_type_name,omitempty"` // name of the feature type
	FeatureInfos    []*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo `protobuf:"bytes,2,rep,name=feature_infos,json=featureInfos" json:"feature_infos,omitempty"`            // one or more features of this feature type
	MultiImageNames []string                                       `protobuf:"bytes,3,rep,name=multi_image_names,json=multiImageNames" json:"multi_image_names,omitempty"` // if 'multi_images' in AnalyzeImage were used the feature can be associated to one or more images; if not used it's assumed corresponding to all images
	Section         []string                                       `protobuf:"bytes,100,rep,name=section" json:"section,omitempty"`                                        // one or more areas that the defect is found in
	FilteredOut     *bool                                          `protobuf:"varint,101,opt,name=filtered_out,json=filteredOut" json:"filtered_out,omitempty"`            // whether the defect was filtered out by the filtering criteria
	Classifier      *float64                                       `protobuf:"fixed64,102,opt,name=classifier" json:"classifier,omitempty"`                                // image classifier or anomaly score, depending on network type
}

func (x *Pb_Body_ImageResultPb_Feature) Reset() {
	*x = Pb_Body_ImageResultPb_Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_Feature) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_Feature) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_Feature.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_Feature) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 5}
}

func (x *Pb_Body_ImageResultPb_Feature) GetFeatureTypeName() string {
	if x != nil && x.FeatureTypeName != nil {
		return *x.FeatureTypeName
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_Feature) GetFeatureInfos() []*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo {
	if x != nil {
		return x.FeatureInfos
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_Feature) GetMultiImageNames() []string {
	if x != nil {
		return x.MultiImageNames
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_Feature) GetSection() []string {
	if x != nil {
		return x.Section
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_Feature) GetFilteredOut() bool {
	if x != nil && x.FilteredOut != nil {
		return *x.FilteredOut
	}
	return false
}

func (x *Pb_Body_ImageResultPb_Feature) GetClassifier() float64 {
	if x != nil && x.Classifier != nil {
		return *x.Classifier
	}
	return 0
}

type Pb_Body_ImageResultPb_ImageClassification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageClassName    *string                                                       `protobuf:"bytes,1,opt,name=image_class_name,json=imageClassName" json:"image_class_name,omitempty"`                                                                                            // optional name of this class
	ImageQualityClass *Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum `protobuf:"varint,2,opt,name=image_quality_class,json=imageQualityClass,enum=image_analysis.Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum" json:"image_quality_class,omitempty"` // optional rough information about final image quality
	ImageQualityCode  *string                                                       `protobuf:"bytes,3,opt,name=image_quality_code,json=imageQualityCode" json:"image_quality_code,omitempty"`                                                                                      // IA can use this to transfer an internal reason/code to GUI for the current classification
	ImageQualityScore *float64                                                      `protobuf:"fixed64,4,opt,name=image_quality_score,json=imageQualityScore,def=-1e+99" json:"image_quality_score,omitempty"`                                                                      // IA could set a score between 1 and 0 (1 indicates the maximum certainty that the image has this quality)
	ImageOkScore      *float64                                                      `protobuf:"fixed64,5,opt,name=image_ok_score,json=imageOkScore,def=-1e+99" json:"image_ok_score,omitempty"`                                                                                     // IA could set a score between 1 and 0 (1 indicates the maximum certainty that the image is OK)
	ImageAvggrayvalue *float64                                                      `protobuf:"fixed64,6,opt,name=image_avggrayvalue,json=imageAvggrayvalue,def=-1e+99" json:"image_avggrayvalue,omitempty"`                                                                        // optional value (average gray value of whole image)
	ImageMaxgrayvalue *float64                                                      `protobuf:"fixed64,7,opt,name=image_maxgrayvalue,json=imageMaxgrayvalue,def=-1e+99" json:"image_maxgrayvalue,omitempty"`                                                                        // optional value (maximum gray value of whole image)
	ImageMingrayvalue *float64                                                      `protobuf:"fixed64,8,opt,name=image_mingrayvalue,json=imageMingrayvalue,def=-1e+99" json:"image_mingrayvalue,omitempty"`                                                                        // optional value (minimum gray value of whole image)
}

// Default values for Pb_Body_ImageResultPb_ImageClassification fields.
const (
	Default_Pb_Body_ImageResultPb_ImageClassification_ImageQualityScore = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_ImageClassification_ImageOkScore      = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_ImageClassification_ImageAvggrayvalue = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_ImageClassification_ImageMaxgrayvalue = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_ImageClassification_ImageMingrayvalue = float64(-1e+99)
)

func (x *Pb_Body_ImageResultPb_ImageClassification) Reset() {
	*x = Pb_Body_ImageResultPb_ImageClassification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_ImageClassification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_ImageClassification) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_ImageClassification) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_ImageClassification.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_ImageClassification) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 6}
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageClassName() string {
	if x != nil && x.ImageClassName != nil {
		return *x.ImageClassName
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageQualityClass() Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum {
	if x != nil && x.ImageQualityClass != nil {
		return *x.ImageQualityClass
	}
	return Pb_Body_ImageResultPb_ImageClassification_UNDEFINED_QUALITY
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageQualityCode() string {
	if x != nil && x.ImageQualityCode != nil {
		return *x.ImageQualityCode
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageQualityScore() float64 {
	if x != nil && x.ImageQualityScore != nil {
		return *x.ImageQualityScore
	}
	return Default_Pb_Body_ImageResultPb_ImageClassification_ImageQualityScore
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageOkScore() float64 {
	if x != nil && x.ImageOkScore != nil {
		return *x.ImageOkScore
	}
	return Default_Pb_Body_ImageResultPb_ImageClassification_ImageOkScore
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageAvggrayvalue() float64 {
	if x != nil && x.ImageAvggrayvalue != nil {
		return *x.ImageAvggrayvalue
	}
	return Default_Pb_Body_ImageResultPb_ImageClassification_ImageAvggrayvalue
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageMaxgrayvalue() float64 {
	if x != nil && x.ImageMaxgrayvalue != nil {
		return *x.ImageMaxgrayvalue
	}
	return Default_Pb_Body_ImageResultPb_ImageClassification_ImageMaxgrayvalue
}

func (x *Pb_Body_ImageResultPb_ImageClassification) GetImageMingrayvalue() float64 {
	if x != nil && x.ImageMingrayvalue != nil {
		return *x.ImageMingrayvalue
	}
	return Default_Pb_Body_ImageResultPb_ImageClassification_ImageMingrayvalue
}

type Pb_Body_ImageResultPb_FeaturePb_FeatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutlineRectPx           *Pb_Body_ImageResultPb_Rect                        `protobuf:"bytes,1,opt,name=outline_rect_px,json=outlineRectPx" json:"outline_rect_px,omitempty"`    // outline rectangle in pixels
	Probability             *float64                                           `protobuf:"fixed64,2,opt,name=probability,def=-1e+99" json:"probability,omitempty"`                  // probability for this feature (independent from other features, 1.0 means 100%) (optional value)
	Length                  *float64                                           `protobuf:"fixed64,3,opt,name=length,def=-1e+99" json:"length,omitempty"`                            // length  (optional value)
	Area                    *float64                                           `protobuf:"fixed64,4,opt,name=area,def=-1e+99" json:"area,omitempty"`                                // area  (optional value)
	Angle                   *float64                                           `protobuf:"fixed64,5,opt,name=angle,def=-1e+99" json:"angle,omitempty"`                              // angle  (optional value)
	Number                  *float64                                           `protobuf:"fixed64,6,opt,name=number,def=-1e+99" json:"number,omitempty"`                            // number - can be freely used (optional value)
	Average                 *float64                                           `protobuf:"fixed64,7,opt,name=average,def=-1e+99" json:"average,omitempty"`                          // average - can be freely used (optional value)
	Maximum                 *float64                                           `protobuf:"fixed64,8,opt,name=maximum,def=-1e+99" json:"maximum,omitempty"`                          // maximum - can be freely used (optional value)
	Minimum                 *float64                                           `protobuf:"fixed64,9,opt,name=minimum,def=-1e+99" json:"minimum,omitempty"`                          // minimum - can be freely used (optional value)
	AreaEdge                *float64                                           `protobuf:"fixed64,10,opt,name=area_edge,json=areaEdge,def=-1e+99" json:"area_edge,omitempty"`       // area_edge - optional value (area inside the edge part of the cell)
	AreaLength              *float64                                           `protobuf:"fixed64,11,opt,name=area_length,json=areaLength,def=-1e+99" json:"area_length,omitempty"` // area_length - optional value (length inside the edge part of the cell)
	Avggrayvalue            *float64                                           `protobuf:"fixed64,13,opt,name=avggrayvalue,def=-1e+99" json:"avggrayvalue,omitempty"`               // avggrayvalue - optional value (average gray value)
	Maxgrayvalue            *float64                                           `protobuf:"fixed64,14,opt,name=maxgrayvalue,def=-1e+99" json:"maxgrayvalue,omitempty"`               // maxgrayvalue - optional value (maximum gray value)
	Mingrayvalue            *float64                                           `protobuf:"fixed64,15,opt,name=mingrayvalue,def=-1e+99" json:"mingrayvalue,omitempty"`               // mingrayvalue - optional value (minimum gray value)
	Id                      *int32                                             `protobuf:"varint,16,opt,name=id,def=-1" json:"id,omitempty"`                                        // optional unique ID - can be used for referencing between features via related_ids (scope: message)
	RelatedIds              []int32                                            `protobuf:"varint,17,rep,name=related_ids,json=relatedIds" json:"related_ids,omitempty"`             // a derived feature can references its base-features by id
	Width                   *float64                                           `protobuf:"fixed64,100,opt,name=width,def=-1e+99" json:"width,omitempty"`                            // width (optional value)
	OutlineRectMm           *Pb_Body_ImageResultPb_Rect                        `protobuf:"bytes,101,opt,name=outline_rect_mm,json=outlineRectMm" json:"outline_rect_mm,omitempty"`  // outline rectangle in mm
	Uid                     *string                                            `protobuf:"bytes,102,opt,name=uid" json:"uid,omitempty"`                                             // optional UID, replaced use of ID above
	RelatedUids             []string                                           `protobuf:"bytes,103,rep,name=related_uids,json=relatedUids" json:"related_uids,omitempty"`
	MinimalBoundingBox      *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox     `protobuf:"bytes,104,opt,name=minimal_bounding_box,json=minimalBoundingBox" json:"minimal_bounding_box,omitempty"`
	MinimalBoundingBoxPoint []*Pb_Body_ImageResultPb_DENK_Point                `protobuf:"bytes,105,rep,name=minimal_bounding_box_point,json=minimalBoundingBoxPoint" json:"minimal_bounding_box_point,omitempty"`
	OcrText                 *string                                            `protobuf:"bytes,106,opt,name=ocr_text,json=ocrText" json:"ocr_text,omitempty"`
	OcrCharacterPosition    []*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition `protobuf:"bytes,107,rep,name=ocr_character_position,json=ocrCharacterPosition" json:"ocr_character_position,omitempty"`
}

// Default values for Pb_Body_ImageResultPb_FeaturePb_FeatureInfo fields.
const (
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Probability  = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Length       = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Area         = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Angle        = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Number       = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Average      = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Maximum      = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Minimum      = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_AreaEdge     = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_AreaLength   = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Avggrayvalue = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Maxgrayvalue = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Mingrayvalue = float64(-1e+99)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Id           = int32(-1)
	Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Width        = float64(-1e+99)
)

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) Reset() {
	*x = Pb_Body_ImageResultPb_FeaturePb_FeatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) ProtoMessage() {}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ImageAnalysis_ProtobufMessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pb_Body_ImageResultPb_FeaturePb_FeatureInfo.ProtoReflect.Descriptor instead.
func (*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) Descriptor() ([]byte, []int) {
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP(), []int{18, 5, 0}
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetOutlineRectPx() *Pb_Body_ImageResultPb_Rect {
	if x != nil {
		return x.OutlineRectPx
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetProbability() float64 {
	if x != nil && x.Probability != nil {
		return *x.Probability
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Probability
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetLength() float64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Length
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetArea() float64 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Area
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetAngle() float64 {
	if x != nil && x.Angle != nil {
		return *x.Angle
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Angle
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetNumber() float64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Number
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetAverage() float64 {
	if x != nil && x.Average != nil {
		return *x.Average
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Average
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMaximum() float64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Maximum
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMinimum() float64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Minimum
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetAreaEdge() float64 {
	if x != nil && x.AreaEdge != nil {
		return *x.AreaEdge
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_AreaEdge
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetAreaLength() float64 {
	if x != nil && x.AreaLength != nil {
		return *x.AreaLength
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_AreaLength
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetAvggrayvalue() float64 {
	if x != nil && x.Avggrayvalue != nil {
		return *x.Avggrayvalue
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Avggrayvalue
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMaxgrayvalue() float64 {
	if x != nil && x.Maxgrayvalue != nil {
		return *x.Maxgrayvalue
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Maxgrayvalue
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMingrayvalue() float64 {
	if x != nil && x.Mingrayvalue != nil {
		return *x.Mingrayvalue
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Mingrayvalue
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Id
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetRelatedIds() []int32 {
	if x != nil {
		return x.RelatedIds
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return Default_Pb_Body_ImageResultPb_FeaturePb_FeatureInfo_Width
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetOutlineRectMm() *Pb_Body_ImageResultPb_Rect {
	if x != nil {
		return x.OutlineRectMm
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetRelatedUids() []string {
	if x != nil {
		return x.RelatedUids
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMinimalBoundingBox() *Pb_Body_ImageResultPb_DENK_MinimalBoundingBox {
	if x != nil {
		return x.MinimalBoundingBox
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetMinimalBoundingBoxPoint() []*Pb_Body_ImageResultPb_DENK_Point {
	if x != nil {
		return x.MinimalBoundingBoxPoint
	}
	return nil
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetOcrText() string {
	if x != nil && x.OcrText != nil {
		return *x.OcrText
	}
	return ""
}

func (x *Pb_Body_ImageResultPb_FeaturePb_FeatureInfo) GetOcrCharacterPosition() []*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition {
	if x != nil {
		return x.OcrCharacterPosition
	}
	return nil
}

var File_ImageAnalysis_ProtobufMessages_proto protoreflect.FileDescriptor

var file_ImageAnalysis_ProtobufMessages_proto_rawDesc = []byte{
	0x0a, 0x24, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x70, 0x62, 0x5f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x03, 0x31, 0x31, 0x39, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x22, 0xcc, 0x06, 0x0a, 0x10, 0x70,
	0x62, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x4f, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x55, 0x74, 0x63, 0x4d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xba, 0x02, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x47,
	0x45, 0x54, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45,
	0x54, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x49, 0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45, 0x54, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x53, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x54, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x54, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x10, 0x08, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x45, 0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53,
	0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x5a, 0x45, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x46, 0x4f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x45, 0x54, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xe8, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x45,
	0x54, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x46, 0x49, 0x4c, 0x45, 0x10, 0xe9, 0x07, 0x12, 0x15,
	0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x46, 0x49,
	0x4c, 0x45, 0x10, 0xea, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x45, 0x54, 0x53, 0x54, 0x41, 0x54,
	0x49, 0x53, 0x54, 0x49, 0x43, 0x53, 0x10, 0xeb, 0x07, 0x22, 0x34, 0x0a, 0x0c, 0x70, 0x62, 0x5f,
	0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x69,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x89, 0x03, 0x0a, 0x1a, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x55, 0x74, 0x63, 0x4d, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x73, 0x12, 0x68, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x79, 0x0a, 0x11, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x1b, 0x70,
	0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x1b, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64,
	0x79, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x38, 0x0a, 0x15, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x06, 0x0a, 0x1e, 0x70, 0x62,
	0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x3a, 0x0a, 0x0e, 0x70,
	0x62, 0x5f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xe3, 0x01, 0x0a, 0x10, 0x70, 0x62, 0x5f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x0c, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x44, 0x54, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x44, 0x52, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe7, 0x02,
	0x0a, 0x0d, 0x70, 0x62, 0x5f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x68, 0x0a,
	0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79,
	0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x5f, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x5e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f,
	0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x5f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x0d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x44, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x5f, 0x44, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x55, 0x54, 0x5f, 0x44, 0x52, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x44, 0x52, 0x10, 0x03,
	0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x70, 0x62, 0x5f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x3a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x44, 0x54,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x6c,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0xb0, 0x05, 0x0a, 0x11,
	0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f,
	0x42, 0x6f, 0x64, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x62, 0x5f, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x65, 0x6c, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62,
	0x5f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xc1, 0x03, 0x0a, 0x0b, 0x70,
	0x62, 0x5f, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0c, 0x62, 0x75,
	0x73, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0b, 0x62, 0x75, 0x73, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x62, 0x75, 0x73, 0x62, 0x61, 0x72, 0x5f, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x70, 0x62, 0x5f, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x62,
	0x5f, 0x42, 0x75, 0x73, 0x62, 0x61, 0x72, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x42, 0x4f, 0x52, 0x11, 0x62, 0x75, 0x73, 0x62, 0x61, 0x72, 0x4f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x0c, 0x63, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70,
	0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x62, 0x5f, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x62, 0x5f,
	0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x3a,
	0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x43, 0x54, 0x52, 0x0b, 0x63,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x70, 0x62,
	0x5f, 0x42, 0x75, 0x73, 0x62, 0x61, 0x72, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x42, 0x4f, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x42, 0x4f, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x56,
	0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x42, 0x4f, 0x10, 0x02, 0x22, 0x40, 0x0a, 0x12,
	0x70, 0x62, 0x5f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x43, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x4f, 0x5f, 0x43, 0x54, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x4c, 0x59, 0x5f, 0x43, 0x54, 0x10, 0x02, 0x22, 0x3d,
	0x0a, 0x14, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a,
	0x17, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x20, 0x70, 0x62, 0x5f, 0x42,
	0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x70, 0x62, 0x5f,
	0x42, 0x6f, 0x64, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0xc1, 0x02, 0x0a, 0x0c, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5a, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x62, 0x5f, 0x46, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x08, 0x62, 0x69, 0x74, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x22, 0x60, 0x0a, 0x11, 0x70, 0x62, 0x5f, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x5f, 0x46, 0x46, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4e, 0x47,
	0x5f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4a, 0x50, 0x47, 0x5f, 0x46, 0x46, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x46, 0x10, 0x03, 0x12, 0x09, 0x0a,
	0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49, 0x46, 0x5f,
	0x46, 0x46, 0x10, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x70, 0x62, 0x5f, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xd1,
	0x02, 0x0a, 0x11, 0x70, 0x62, 0x5f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62,
	0x5f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x62, 0x5f, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0d, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x55,
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x62, 0x5f, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x0f, 0x70, 0x62, 0x5f, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3a, 0x0a, 0x0e, 0x70, 0x62, 0x5f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x14, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x70, 0x62, 0x5f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xff, 0x18, 0x0a, 0x13, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64,
	0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x6d, 0x0a, 0x14, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x43,
	0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x70, 0x62, 0x5f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x69,
	0x6e, 0x12, 0x52, 0x0a, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x70, 0x62, 0x5f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x69, 0x64, 0x1a, 0x61, 0x0a, 0x07, 0x70, 0x62, 0x5f, 0x52, 0x65, 0x63, 0x74,
	0x12, 0x13, 0x0a, 0x05, 0x78, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x78, 0x50, 0x6f, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x79, 0x50, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x2b, 0x0a, 0x0d, 0x70, 0x62, 0x5f, 0x44,
	0x45, 0x4e, 0x4b, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x79, 0x1a, 0x96, 0x01, 0x0a, 0x1a, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e,
	0x4b, 0x5f, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x6f, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0x56,
	0x0a, 0x14, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e, 0x4b, 0x5f, 0x4f, 0x63, 0x72, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x7d, 0x0a, 0x1c, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e,
	0x4b, 0x5f, 0x4f, 0x63, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0d, 0x6f, 0x63, 0x72, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70,
	0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e, 0x4b, 0x5f, 0x4f, 0x63, 0x72, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x63, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0xbb, 0x0b, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x62, 0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x62, 0x5f, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x93, 0x09,
	0x0a, 0x0e, 0x70, 0x62, 0x5f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x53, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f,
	0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70,
	0x62, 0x5f, 0x52, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x63, 0x74, 0x50, 0x78, 0x12, 0x28, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b,
	0x39, 0x39, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x1e, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x3a,
	0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d,
	0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b,
	0x39, 0x39, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39,
	0x39, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x07, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b,
	0x39, 0x39, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31,
	0x65, 0x2b, 0x39, 0x39, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x20, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06,
	0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12,
	0x23, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61,
	0x45, 0x64, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39,
	0x39, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a,
	0x0c, 0x61, 0x76, 0x67, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x0c, 0x61, 0x76, 0x67,
	0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x3a,
	0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x67, 0x72, 0x61, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x67, 0x72, 0x61, 0x79,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65,
	0x2b, 0x39, 0x39, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d,
	0x31, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x53, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6d, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70,
	0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x52, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x74, 0x4d, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x67, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x73, 0x12, 0x70,
	0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62,
	0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e, 0x4b, 0x5f, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61,
	0x6c, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x52, 0x12, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78,
	0x12, 0x6e, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x69,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e,
	0x4b, 0x5f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x63, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x63, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x76, 0x0a, 0x16, 0x6f,
	0x63, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x6b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f,
	0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x70, 0x62, 0x5f, 0x44, 0x45, 0x4e, 0x4b, 0x5f, 0x4f, 0x63, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6f,
	0x63, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xf1, 0x04, 0x0a, 0x16, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7e, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x11, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c,
	0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x0c,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x12,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x76, 0x67, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39,
	0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x76, 0x67, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x3a,
	0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x61,
	0x78, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x12, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x06, 0x2d, 0x31, 0x65, 0x2b, 0x39, 0x39, 0x52, 0x11,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x67, 0x72, 0x61, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x74, 0x0a, 0x13, 0x70, 0x62, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x51, 0x55, 0x41, 0x4c,
	0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x5f, 0x49,
	0x53, 0x53, 0x55, 0x45, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x51, 0x55,
	0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x03, 0x22, 0x85, 0x02, 0x0a, 0x13, 0x70, 0x62, 0x5f, 0x42,
	0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x50, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x62, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x78,
	0x74, 0x22, 0x5c, 0x0a, 0x0f, 0x70, 0x62, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x49, 0x54, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x54, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x54, 0x10, 0x04, 0x22,
	0xe2, 0x01, 0x0a, 0x1e, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x15, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x41, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x18, 0x70, 0x62, 0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x1e, 0x70, 0x62,
	0x5f, 0x42, 0x6f, 0x64, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x73, 0x76, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x43, 0x73, 0x76, 0x2a, 0x4b, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x5f, 0x44, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x44, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44,
	0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x54, 0x10, 0x03,
	0x42, 0x2d, 0x5a, 0x1b, 0x64, 0x65, 0x6e, 0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0xaa,
	0x02, 0x0d, 0x44, 0x45, 0x4e, 0x4b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x41,
}

var (
	file_ImageAnalysis_ProtobufMessages_proto_rawDescOnce sync.Once
	file_ImageAnalysis_ProtobufMessages_proto_rawDescData = file_ImageAnalysis_ProtobufMessages_proto_rawDesc
)

func file_ImageAnalysis_ProtobufMessages_proto_rawDescGZIP() []byte {
	file_ImageAnalysis_ProtobufMessages_proto_rawDescOnce.Do(func() {
		file_ImageAnalysis_ProtobufMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_ImageAnalysis_ProtobufMessages_proto_rawDescData)
	})
	return file_ImageAnalysis_ProtobufMessages_proto_rawDescData
}

var file_ImageAnalysis_ProtobufMessages_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_ImageAnalysis_ProtobufMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_ImageAnalysis_ProtobufMessages_proto_goTypes = []interface{}{
	(DataTypeEnum)(0),                                                 // 0: image_analysis.DataTypeEnum
	(Pb_MessageHeader_MessageType)(0),                                 // 1: image_analysis.pb_MessageHeader.MessageType
	(Pb_Body_GetPresetInfo_Response_DirectionEnum)(0),                 // 2: image_analysis.pb_Body_GetPresetInfo_Response.DirectionEnum
	(Pb_Body_SetConfigPb_CellInfoPb_BusbarOrientationEnum)(0),         // 3: image_analysis.pb_Body_SetConfig.pb_CellInfo.pb_BusbarOrientationEnum
	(Pb_Body_SetConfigPb_CellInfoPb_CrystalTypeEnum)(0),               // 4: image_analysis.pb_Body_SetConfig.pb_CellInfo.pb_CrystalTypeEnum
	(Pb_ImageDataPb_FileFormatEnum)(0),                                // 5: image_analysis.pb_ImageData.pb_FileFormatEnum
	(Pb_Body_ImageResultPb_ImageClassificationPb_ImageQualityEnum)(0), // 6: image_analysis.pb_Body_ImageResult.pb_ImageClassification.pb_ImageQualityEnum
	(Pb_Body_InfoMessagePb_InfoTypeEnum)(0),                           // 7: image_analysis.pb_Body_InfoMessage.pb_InfoTypeEnum
	(*Pb_ProtocolVersionDetection)(nil),                               // 8: image_analysis.pb_ProtocolVersionDetection
	(*Pb_MessageHeader)(nil),                                          // 9: image_analysis.pb_MessageHeader
	(*Pb_Body_Init)(nil),                                              // 10: image_analysis.pb_Body_Init
	(*Pb_Body_GetStatus_Response)(nil),                                // 11: image_analysis.pb_Body_GetStatus_Response
	(*Pb_Body_GetVersion_Response)(nil),                               // 12: image_analysis.pb_Body_GetVersion_Response
	(*Pb_Body_GetPresets_Response)(nil),                               // 13: image_analysis.pb_Body_GetPresets_Response
	(*Pb_Body_GetPresetInfo)(nil),                                     // 14: image_analysis.pb_Body_GetPresetInfo
	(*Pb_Body_GetPresetInfo_Response)(nil),                            // 15: image_analysis.pb_Body_GetPresetInfo_Response
	(*Pb_ConfigParam)(nil),                                            // 16: image_analysis.pb_ConfigParam
	(*Pb_Body_SetConfig)(nil),                                         // 17: image_analysis.pb_Body_SetConfig
	(*Pb_Body_RemoveConfig)(nil),                                      // 18: image_analysis.pb_Body_RemoveConfig
	(*Pb_Body_GetConfigParams)(nil),                                   // 19: image_analysis.pb_Body_GetConfigParams
	(*Pb_Body_GetConfigParams_Response)(nil),                          // 20: image_analysis.pb_Body_GetConfigParams_Response
	(*Pb_Body_SetConfigParams)(nil),                                   // 21: image_analysis.pb_Body_SetConfigParams
	(*Pb_ImageData)(nil),                                              // 22: image_analysis.pb_ImageData
	(*Pb_MultiImages)(nil),                                            // 23: image_analysis.pb_MultiImages
	(*Pb_AdditionalData)(nil),                                         // 24: image_analysis.pb_AdditionalData
	(*Pb_Body_AnalyzeImage)(nil),                                      // 25: image_analysis.pb_Body_AnalyzeImage
	(*Pb_Body_ImageResult)(nil),                                       // 26: image_analysis.pb_Body_ImageResult
	(*Pb_Body_InfoMessage)(nil),                                       // 27: image_analysis.pb_Body_InfoMessage
	(*Pb_Body_GetConfigFile_Response)(nil),                            // 28: image_analysis.pb_Body_GetConfigFile_Response
	(*Pb_Body_SetConfigFile)(nil),                                     // 29: image_analysis.pb_Body_SetConfigFile
	(*Pb_Body_ModifyConfigFile)(nil),                                  // 30: image_analysis.pb_Body_ModifyConfigFile
	(*Pb_Body_GetStatistics_Response)(nil),                            // 31: image_analysis.pb_Body_GetStatistics_Response
	(*Pb_Body_GetStatus_ResponsePb_ImageInProcess)(nil),               // 32: image_analysis.pb_Body_GetStatus_Response.pb_ImageInProcess
	(*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem)(nil),              // 33: image_analysis.pb_Body_GetPresetInfo_Response.pb_AddInfoItem
	(*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem)(nil),            // 34: image_analysis.pb_Body_GetPresetInfo_Response.pb_ParamInfoItem
	(*Pb_Body_GetPresetInfo_ResponsePb_PresetItem)(nil),               // 35: image_analysis.pb_Body_GetPresetInfo_Response.pb_PresetItem
	(*Pb_Body_SetConfigPb_CellInfo)(nil),                              // 36: image_analysis.pb_Body_SetConfig.pb_CellInfo
	(*Pb_AdditionalDataPb_NumericValue)(nil),                          // 37: image_analysis.pb_AdditionalData.pb_NumericValue
	(*Pb_AdditionalDataPb_StringValue)(nil),                           // 38: image_analysis.pb_AdditionalData.pb_StringValue
	(*Pb_Body_ImageResultPb_Rect)(nil),                                // 39: image_analysis.pb_Body_ImageResult.pb_Rect
	(*Pb_Body_ImageResultPb_DENK_Point)(nil),                          // 40: image_analysis.pb_Body_ImageResult.pb_DENK_Point
	(*Pb_Body_ImageResultPb_DENK_MinimalBoundingBox)(nil),             // 41: image_analysis.pb_Body_ImageResult.pb_DENK_MinimalBoundingBox
	(*Pb_Body_ImageResultPb_DENK_OcrCharacter)(nil),                   // 42: image_analysis.pb_Body_ImageResult.pb_DENK_OcrCharacter
	(*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition)(nil),           // 43: image_analysis.pb_Body_ImageResult.pb_DENK_OcrCharacterPosition
	(*Pb_Body_ImageResultPb_Feature)(nil),                             // 44: image_analysis.pb_Body_ImageResult.pb_Feature
	(*Pb_Body_ImageResultPb_ImageClassification)(nil),                 // 45: image_analysis.pb_Body_ImageResult.pb_ImageClassification
	(*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo)(nil),               // 46: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo
}
var file_ImageAnalysis_ProtobufMessages_proto_depIdxs = []int32{
	1,  // 0: image_analysis.pb_MessageHeader.message_type:type_name -> image_analysis.pb_MessageHeader.MessageType
	32, // 1: image_analysis.pb_Body_GetStatus_Response.images_in_process:type_name -> image_analysis.pb_Body_GetStatus_Response.pb_ImageInProcess
	35, // 2: image_analysis.pb_Body_GetPresetInfo_Response.preset_info:type_name -> image_analysis.pb_Body_GetPresetInfo_Response.pb_PresetItem
	0,  // 3: image_analysis.pb_ConfigParam.datatype:type_name -> image_analysis.DataTypeEnum
	36, // 4: image_analysis.pb_Body_SetConfig.cell_info:type_name -> image_analysis.pb_Body_SetConfig.pb_CellInfo
	16, // 5: image_analysis.pb_Body_SetConfig.config_params:type_name -> image_analysis.pb_ConfigParam
	16, // 6: image_analysis.pb_Body_GetConfigParams_Response.config_params:type_name -> image_analysis.pb_ConfigParam
	16, // 7: image_analysis.pb_Body_SetConfigParams.config_params:type_name -> image_analysis.pb_ConfigParam
	5,  // 8: image_analysis.pb_ImageData.image_file_format:type_name -> image_analysis.pb_ImageData.pb_FileFormatEnum
	22, // 9: image_analysis.pb_MultiImages.image:type_name -> image_analysis.pb_ImageData
	37, // 10: image_analysis.pb_AdditionalData.numeric_values:type_name -> image_analysis.pb_AdditionalData.pb_NumericValue
	38, // 11: image_analysis.pb_AdditionalData.string_values:type_name -> image_analysis.pb_AdditionalData.pb_StringValue
	22, // 12: image_analysis.pb_Body_AnalyzeImage.image:type_name -> image_analysis.pb_ImageData
	24, // 13: image_analysis.pb_Body_AnalyzeImage.additional_data:type_name -> image_analysis.pb_AdditionalData
	23, // 14: image_analysis.pb_Body_AnalyzeImage.multi_images:type_name -> image_analysis.pb_MultiImages
	44, // 15: image_analysis.pb_Body_ImageResult.features:type_name -> image_analysis.pb_Body_ImageResult.pb_Feature
	45, // 16: image_analysis.pb_Body_ImageResult.image_classification:type_name -> image_analysis.pb_Body_ImageResult.pb_ImageClassification
	22, // 17: image_analysis.pb_Body_ImageResult.image_plain:type_name -> image_analysis.pb_ImageData
	22, // 18: image_analysis.pb_Body_ImageResult.image_overlaid:type_name -> image_analysis.pb_ImageData
	23, // 19: image_analysis.pb_Body_ImageResult.multi_images_plain:type_name -> image_analysis.pb_MultiImages
	23, // 20: image_analysis.pb_Body_ImageResult.multi_images_overlaid:type_name -> image_analysis.pb_MultiImages
	7,  // 21: image_analysis.pb_Body_InfoMessage.info_type:type_name -> image_analysis.pb_Body_InfoMessage.pb_InfoTypeEnum
	0,  // 22: image_analysis.pb_Body_GetPresetInfo_Response.pb_ParamInfoItem.datatype:type_name -> image_analysis.DataTypeEnum
	2,  // 23: image_analysis.pb_Body_GetPresetInfo_Response.pb_ParamInfoItem.direction:type_name -> image_analysis.pb_Body_GetPresetInfo_Response.DirectionEnum
	33, // 24: image_analysis.pb_Body_GetPresetInfo_Response.pb_PresetItem.additional_infos:type_name -> image_analysis.pb_Body_GetPresetInfo_Response.pb_AddInfoItem
	34, // 25: image_analysis.pb_Body_GetPresetInfo_Response.pb_PresetItem.param_list:type_name -> image_analysis.pb_Body_GetPresetInfo_Response.pb_ParamInfoItem
	3,  // 26: image_analysis.pb_Body_SetConfig.pb_CellInfo.busbar_orientation:type_name -> image_analysis.pb_Body_SetConfig.pb_CellInfo.pb_BusbarOrientationEnum
	4,  // 27: image_analysis.pb_Body_SetConfig.pb_CellInfo.crystal_type:type_name -> image_analysis.pb_Body_SetConfig.pb_CellInfo.pb_CrystalTypeEnum
	42, // 28: image_analysis.pb_Body_ImageResult.pb_DENK_OcrCharacterPosition.ocr_character:type_name -> image_analysis.pb_Body_ImageResult.pb_DENK_OcrCharacter
	46, // 29: image_analysis.pb_Body_ImageResult.pb_Feature.feature_infos:type_name -> image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo
	6,  // 30: image_analysis.pb_Body_ImageResult.pb_ImageClassification.image_quality_class:type_name -> image_analysis.pb_Body_ImageResult.pb_ImageClassification.pb_ImageQualityEnum
	39, // 31: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo.outline_rect_px:type_name -> image_analysis.pb_Body_ImageResult.pb_Rect
	39, // 32: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo.outline_rect_mm:type_name -> image_analysis.pb_Body_ImageResult.pb_Rect
	41, // 33: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo.minimal_bounding_box:type_name -> image_analysis.pb_Body_ImageResult.pb_DENK_MinimalBoundingBox
	40, // 34: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo.minimal_bounding_box_point:type_name -> image_analysis.pb_Body_ImageResult.pb_DENK_Point
	43, // 35: image_analysis.pb_Body_ImageResult.pb_Feature.pb_FeatureInfo.ocr_character_position:type_name -> image_analysis.pb_Body_ImageResult.pb_DENK_OcrCharacterPosition
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_ImageAnalysis_ProtobufMessages_proto_init() }
func file_ImageAnalysis_ProtobufMessages_proto_init() {
	if File_ImageAnalysis_ProtobufMessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_ProtocolVersionDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_MessageHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetVersion_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresets_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresetInfo_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_ConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_SetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_RemoveConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetConfigParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetConfigParams_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_SetConfigParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_ImageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_MultiImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_AdditionalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_AnalyzeImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_InfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetConfigFile_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_SetConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ModifyConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetStatistics_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetStatus_ResponsePb_ImageInProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresetInfo_ResponsePb_AddInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresetInfo_ResponsePb_ParamInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_GetPresetInfo_ResponsePb_PresetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_SetConfigPb_CellInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_AdditionalDataPb_NumericValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_AdditionalDataPb_StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_Rect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_DENK_Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_DENK_MinimalBoundingBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_DENK_OcrCharacter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_DENK_OcrCharacterPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_ImageClassification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ImageAnalysis_ProtobufMessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pb_Body_ImageResultPb_FeaturePb_FeatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ImageAnalysis_ProtobufMessages_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ImageAnalysis_ProtobufMessages_proto_goTypes,
		DependencyIndexes: file_ImageAnalysis_ProtobufMessages_proto_depIdxs,
		EnumInfos:         file_ImageAnalysis_ProtobufMessages_proto_enumTypes,
		MessageInfos:      file_ImageAnalysis_ProtobufMessages_proto_msgTypes,
	}.Build()
	File_ImageAnalysis_ProtobufMessages_proto = out.File
	file_ImageAnalysis_ProtobufMessages_proto_rawDesc = nil
	file_ImageAnalysis_ProtobufMessages_proto_goTypes = nil
	file_ImageAnalysis_ProtobufMessages_proto_depIdxs = nil
}
