// Definition of Model File Structure
// Version 2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: modelfile-v2.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelFile_Content_CompressionMethod int32

const (
	ModelFile_Content_CM_NONE ModelFile_Content_CompressionMethod = 0
)

// Enum value maps for ModelFile_Content_CompressionMethod.
var (
	ModelFile_Content_CompressionMethod_name = map[int32]string{
		0: "CM_NONE",
	}
	ModelFile_Content_CompressionMethod_value = map[string]int32{
		"CM_NONE": 0,
	}
)

func (x ModelFile_Content_CompressionMethod) Enum() *ModelFile_Content_CompressionMethod {
	p := new(ModelFile_Content_CompressionMethod)
	*p = x
	return p
}

func (x ModelFile_Content_CompressionMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_Content_CompressionMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[0].Descriptor()
}

func (ModelFile_Content_CompressionMethod) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[0]
}

func (x ModelFile_Content_CompressionMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_Content_CompressionMethod.Descriptor instead.
func (ModelFile_Content_CompressionMethod) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 1, 0}
}

type ModelFile_Content_EncryptionMethod int32

const (
	ModelFile_Content_EM_NONE    ModelFile_Content_EncryptionMethod = 0
	ModelFile_Content_EM_AES_GCM ModelFile_Content_EncryptionMethod = 1
)

// Enum value maps for ModelFile_Content_EncryptionMethod.
var (
	ModelFile_Content_EncryptionMethod_name = map[int32]string{
		0: "EM_NONE",
		1: "EM_AES_GCM",
	}
	ModelFile_Content_EncryptionMethod_value = map[string]int32{
		"EM_NONE":    0,
		"EM_AES_GCM": 1,
	}
)

func (x ModelFile_Content_EncryptionMethod) Enum() *ModelFile_Content_EncryptionMethod {
	p := new(ModelFile_Content_EncryptionMethod)
	*p = x
	return p
}

func (x ModelFile_Content_EncryptionMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_Content_EncryptionMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[1].Descriptor()
}

func (ModelFile_Content_EncryptionMethod) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[1]
}

func (x ModelFile_Content_EncryptionMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_Content_EncryptionMethod.Descriptor instead.
func (ModelFile_Content_EncryptionMethod) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 1, 1}
}

type ModelFile_Input_InputDataType int32

const (
	ModelFile_Input_IDT_IMAGE ModelFile_Input_InputDataType = 0
)

// Enum value maps for ModelFile_Input_InputDataType.
var (
	ModelFile_Input_InputDataType_name = map[int32]string{
		0: "IDT_IMAGE",
	}
	ModelFile_Input_InputDataType_value = map[string]int32{
		"IDT_IMAGE": 0,
	}
)

func (x ModelFile_Input_InputDataType) Enum() *ModelFile_Input_InputDataType {
	p := new(ModelFile_Input_InputDataType)
	*p = x
	return p
}

func (x ModelFile_Input_InputDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_Input_InputDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[2].Descriptor()
}

func (ModelFile_Input_InputDataType) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[2]
}

func (x ModelFile_Input_InputDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_Input_InputDataType.Descriptor instead.
func (ModelFile_Input_InputDataType) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 5, 0}
}

type ModelFile_Output_OcrOutputFormat_Character_CharacterType int32

const (
	ModelFile_Output_OcrOutputFormat_Character_CT_REGULAR       ModelFile_Output_OcrOutputFormat_Character_CharacterType = 0
	ModelFile_Output_OcrOutputFormat_Character_CT_START_OF_TEXT ModelFile_Output_OcrOutputFormat_Character_CharacterType = 1
	ModelFile_Output_OcrOutputFormat_Character_CT_END_OF_TEXT   ModelFile_Output_OcrOutputFormat_Character_CharacterType = 2
	ModelFile_Output_OcrOutputFormat_Character_CT_PADDING       ModelFile_Output_OcrOutputFormat_Character_CharacterType = 3
)

// Enum value maps for ModelFile_Output_OcrOutputFormat_Character_CharacterType.
var (
	ModelFile_Output_OcrOutputFormat_Character_CharacterType_name = map[int32]string{
		0: "CT_REGULAR",
		1: "CT_START_OF_TEXT",
		2: "CT_END_OF_TEXT",
		3: "CT_PADDING",
	}
	ModelFile_Output_OcrOutputFormat_Character_CharacterType_value = map[string]int32{
		"CT_REGULAR":       0,
		"CT_START_OF_TEXT": 1,
		"CT_END_OF_TEXT":   2,
		"CT_PADDING":       3,
	}
)

func (x ModelFile_Output_OcrOutputFormat_Character_CharacterType) Enum() *ModelFile_Output_OcrOutputFormat_Character_CharacterType {
	p := new(ModelFile_Output_OcrOutputFormat_Character_CharacterType)
	*p = x
	return p
}

func (x ModelFile_Output_OcrOutputFormat_Character_CharacterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_Output_OcrOutputFormat_Character_CharacterType) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[3].Descriptor()
}

func (ModelFile_Output_OcrOutputFormat_Character_CharacterType) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[3]
}

func (x ModelFile_Output_OcrOutputFormat_Character_CharacterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_Output_OcrOutputFormat_Character_CharacterType.Descriptor instead.
func (ModelFile_Output_OcrOutputFormat_Character_CharacterType) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 4, 0, 0}
}

type ModelFile_FileInfo_FileType int32

const (
	ModelFile_FileInfo_FT_ONNX_MODEL   ModelFile_FileInfo_FileType = 0
	ModelFile_FileInfo_FT_ZXING_KEY    ModelFile_FileInfo_FileType = 1
	ModelFile_FileInfo_FT_VIZIOTIX_KEY ModelFile_FileInfo_FileType = 2
)

// Enum value maps for ModelFile_FileInfo_FileType.
var (
	ModelFile_FileInfo_FileType_name = map[int32]string{
		0: "FT_ONNX_MODEL",
		1: "FT_ZXING_KEY",
		2: "FT_VIZIOTIX_KEY",
	}
	ModelFile_FileInfo_FileType_value = map[string]int32{
		"FT_ONNX_MODEL":   0,
		"FT_ZXING_KEY":    1,
		"FT_VIZIOTIX_KEY": 2,
	}
)

func (x ModelFile_FileInfo_FileType) Enum() *ModelFile_FileInfo_FileType {
	p := new(ModelFile_FileInfo_FileType)
	*p = x
	return p
}

func (x ModelFile_FileInfo_FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_FileInfo_FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[4].Descriptor()
}

func (ModelFile_FileInfo_FileType) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[4]
}

func (x ModelFile_FileInfo_FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_FileInfo_FileType.Descriptor instead.
func (ModelFile_FileInfo_FileType) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 7, 0}
}

type ModelFile_FileInfo_NetworkType int32

const (
	ModelFile_FileInfo_NT_UNKNOWN                       ModelFile_FileInfo_NetworkType = 0
	ModelFile_FileInfo_NT_CLASSIFICATION                ModelFile_FileInfo_NetworkType = 1
	ModelFile_FileInfo_NT_SEGMENTATION                  ModelFile_FileInfo_NetworkType = 2
	ModelFile_FileInfo_NT_INSTANCE_SEGMENTATION         ModelFile_FileInfo_NetworkType = 3
	ModelFile_FileInfo_NT_OBJECT_DETECTION              ModelFile_FileInfo_NetworkType = 4
	ModelFile_FileInfo_NT_ANOMALY_DETECTION             ModelFile_FileInfo_NetworkType = 5
	ModelFile_FileInfo_NT_OPTICAL_CHARACTER_RECOGNITION ModelFile_FileInfo_NetworkType = 6
)

// Enum value maps for ModelFile_FileInfo_NetworkType.
var (
	ModelFile_FileInfo_NetworkType_name = map[int32]string{
		0: "NT_UNKNOWN",
		1: "NT_CLASSIFICATION",
		2: "NT_SEGMENTATION",
		3: "NT_INSTANCE_SEGMENTATION",
		4: "NT_OBJECT_DETECTION",
		5: "NT_ANOMALY_DETECTION",
		6: "NT_OPTICAL_CHARACTER_RECOGNITION",
	}
	ModelFile_FileInfo_NetworkType_value = map[string]int32{
		"NT_UNKNOWN":                       0,
		"NT_CLASSIFICATION":                1,
		"NT_SEGMENTATION":                  2,
		"NT_INSTANCE_SEGMENTATION":         3,
		"NT_OBJECT_DETECTION":              4,
		"NT_ANOMALY_DETECTION":             5,
		"NT_OPTICAL_CHARACTER_RECOGNITION": 6,
	}
)

func (x ModelFile_FileInfo_NetworkType) Enum() *ModelFile_FileInfo_NetworkType {
	p := new(ModelFile_FileInfo_NetworkType)
	*p = x
	return p
}

func (x ModelFile_FileInfo_NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_FileInfo_NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[5].Descriptor()
}

func (ModelFile_FileInfo_NetworkType) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[5]
}

func (x ModelFile_FileInfo_NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_FileInfo_NetworkType.Descriptor instead.
func (ModelFile_FileInfo_NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 7, 1}
}

type ModelFile_FileInfo_Precision int32

const (
	ModelFile_FileInfo_P_UNDEFINED       ModelFile_FileInfo_Precision = 0
	ModelFile_FileInfo_P_FP8             ModelFile_FileInfo_Precision = 1
	ModelFile_FileInfo_P_FP16            ModelFile_FileInfo_Precision = 2
	ModelFile_FileInfo_P_FP32            ModelFile_FileInfo_Precision = 3
	ModelFile_FileInfo_P_FP64            ModelFile_FileInfo_Precision = 4
	ModelFile_FileInfo_P_INT8            ModelFile_FileInfo_Precision = 5
	ModelFile_FileInfo_P_INT16           ModelFile_FileInfo_Precision = 6
	ModelFile_FileInfo_P_INT32           ModelFile_FileInfo_Precision = 7
	ModelFile_FileInfo_P_INT64           ModelFile_FileInfo_Precision = 8
	ModelFile_FileInfo_P_UINT8           ModelFile_FileInfo_Precision = 9
	ModelFile_FileInfo_P_UINT16          ModelFile_FileInfo_Precision = 10
	ModelFile_FileInfo_P_UINT32          ModelFile_FileInfo_Precision = 11
	ModelFile_FileInfo_P_UINT64          ModelFile_FileInfo_Precision = 12
	ModelFile_FileInfo_P_MIXED_PRECISION ModelFile_FileInfo_Precision = 13
)

// Enum value maps for ModelFile_FileInfo_Precision.
var (
	ModelFile_FileInfo_Precision_name = map[int32]string{
		0:  "P_UNDEFINED",
		1:  "P_FP8",
		2:  "P_FP16",
		3:  "P_FP32",
		4:  "P_FP64",
		5:  "P_INT8",
		6:  "P_INT16",
		7:  "P_INT32",
		8:  "P_INT64",
		9:  "P_UINT8",
		10: "P_UINT16",
		11: "P_UINT32",
		12: "P_UINT64",
		13: "P_MIXED_PRECISION",
	}
	ModelFile_FileInfo_Precision_value = map[string]int32{
		"P_UNDEFINED":       0,
		"P_FP8":             1,
		"P_FP16":            2,
		"P_FP32":            3,
		"P_FP64":            4,
		"P_INT8":            5,
		"P_INT16":           6,
		"P_INT32":           7,
		"P_INT64":           8,
		"P_UINT8":           9,
		"P_UINT16":          10,
		"P_UINT32":          11,
		"P_UINT64":          12,
		"P_MIXED_PRECISION": 13,
	}
)

func (x ModelFile_FileInfo_Precision) Enum() *ModelFile_FileInfo_Precision {
	p := new(ModelFile_FileInfo_Precision)
	*p = x
	return p
}

func (x ModelFile_FileInfo_Precision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFile_FileInfo_Precision) Descriptor() protoreflect.EnumDescriptor {
	return file_modelfile_v2_proto_enumTypes[6].Descriptor()
}

func (ModelFile_FileInfo_Precision) Type() protoreflect.EnumType {
	return &file_modelfile_v2_proto_enumTypes[6]
}

func (x ModelFile_FileInfo_Precision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFile_FileInfo_Precision.Descriptor instead.
func (ModelFile_FileInfo_Precision) EnumDescriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 7, 2}
}

type ModelFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion *ModelFile_Version      `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	CreatedAt       int64                   `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FileInfo        *ModelFile_FileInfo     `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	Content         *ModelFile_Content      `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	ClassLabels     []*ModelFile_ClassLabel `protobuf:"bytes,5,rep,name=class_labels,json=classLabels,proto3" json:"class_labels,omitempty"`
	Inputs          []*ModelFile_Input      `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs         []*ModelFile_Output     `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *ModelFile) Reset() {
	*x = ModelFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile) ProtoMessage() {}

func (x *ModelFile) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile.ProtoReflect.Descriptor instead.
func (*ModelFile) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0}
}

func (x *ModelFile) GetProtocolVersion() *ModelFile_Version {
	if x != nil {
		return x.ProtocolVersion
	}
	return nil
}

func (x *ModelFile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelFile) GetFileInfo() *ModelFile_FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *ModelFile) GetContent() *ModelFile_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModelFile) GetClassLabels() []*ModelFile_ClassLabel {
	if x != nil {
		return x.ClassLabels
	}
	return nil
}

func (x *ModelFile) GetInputs() []*ModelFile_Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ModelFile) GetOutputs() []*ModelFile_Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type ModelFile_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major uint32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor uint32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch uint32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *ModelFile_Version) Reset() {
	*x = ModelFile_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Version) ProtoMessage() {}

func (x *ModelFile_Version) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Version.ProtoReflect.Descriptor instead.
func (*ModelFile_Version) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ModelFile_Version) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *ModelFile_Version) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *ModelFile_Version) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

type ModelFile_Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteContent       []byte                                `protobuf:"bytes,1,opt,name=byte_content,json=byteContent,proto3" json:"byte_content,omitempty"`
	HashSha256        []byte                                `protobuf:"bytes,2,opt,name=hash_sha256,json=hashSha256,proto3" json:"hash_sha256,omitempty"` // hash of the uncompressed and unencrypted content
	CompressionMethod ModelFile_Content_CompressionMethod   `protobuf:"varint,3,opt,name=compression_method,json=compressionMethod,proto3,enum=modelfile.v2.ModelFile_Content_CompressionMethod" json:"compression_method,omitempty"`
	EncryptionMethod  ModelFile_Content_EncryptionMethod    `protobuf:"varint,4,opt,name=encryption_method,json=encryptionMethod,proto3,enum=modelfile.v2.ModelFile_Content_EncryptionMethod" json:"encryption_method,omitempty"`
	KeySlots          map[string]*ModelFile_Content_KeySlot `protobuf:"bytes,5,rep,name=key_slots,json=keySlots,proto3" json:"key_slots,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // maps the key identifier string to the wrapped key
}

func (x *ModelFile_Content) Reset() {
	*x = ModelFile_Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Content) ProtoMessage() {}

func (x *ModelFile_Content) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Content.ProtoReflect.Descriptor instead.
func (*ModelFile_Content) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ModelFile_Content) GetByteContent() []byte {
	if x != nil {
		return x.ByteContent
	}
	return nil
}

func (x *ModelFile_Content) GetHashSha256() []byte {
	if x != nil {
		return x.HashSha256
	}
	return nil
}

func (x *ModelFile_Content) GetCompressionMethod() ModelFile_Content_CompressionMethod {
	if x != nil {
		return x.CompressionMethod
	}
	return ModelFile_Content_CM_NONE
}

func (x *ModelFile_Content) GetEncryptionMethod() ModelFile_Content_EncryptionMethod {
	if x != nil {
		return x.EncryptionMethod
	}
	return ModelFile_Content_EM_NONE
}

func (x *ModelFile_Content) GetKeySlots() map[string]*ModelFile_Content_KeySlot {
	if x != nil {
		return x.KeySlots
	}
	return nil
}

type ModelFile_ClassLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassLabelId string `protobuf:"bytes,1,opt,name=class_label_id,json=classLabelId,proto3" json:"class_label_id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShortName    string `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Color        string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"` // hex value in the form #RRGGBB, regex: ^#(?:[0-9a-fA-F]{2}){3}$
}

func (x *ModelFile_ClassLabel) Reset() {
	*x = ModelFile_ClassLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_ClassLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_ClassLabel) ProtoMessage() {}

func (x *ModelFile_ClassLabel) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_ClassLabel.ProtoReflect.Descriptor instead.
func (*ModelFile_ClassLabel) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ModelFile_ClassLabel) GetClassLabelId() string {
	if x != nil {
		return x.ClassLabelId
	}
	return ""
}

func (x *ModelFile_ClassLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelFile_ClassLabel) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ModelFile_ClassLabel) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type ModelFile_ImageSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width    uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height   uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Channels uint32 `protobuf:"varint,3,opt,name=channels,proto3" json:"channels,omitempty"`
}

func (x *ModelFile_ImageSize) Reset() {
	*x = ModelFile_ImageSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_ImageSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_ImageSize) ProtoMessage() {}

func (x *ModelFile_ImageSize) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_ImageSize.ProtoReflect.Descriptor instead.
func (*ModelFile_ImageSize) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ModelFile_ImageSize) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ModelFile_ImageSize) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ModelFile_ImageSize) GetChannels() uint32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

type ModelFile_RegionFromEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left   float64 `protobuf:"fixed64,1,opt,name=left,proto3" json:"left,omitempty"`
	Right  float64 `protobuf:"fixed64,2,opt,name=right,proto3" json:"right,omitempty"`
	Top    float64 `protobuf:"fixed64,3,opt,name=top,proto3" json:"top,omitempty"`
	Bottom float64 `protobuf:"fixed64,4,opt,name=bottom,proto3" json:"bottom,omitempty"`
}

func (x *ModelFile_RegionFromEdge) Reset() {
	*x = ModelFile_RegionFromEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_RegionFromEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_RegionFromEdge) ProtoMessage() {}

func (x *ModelFile_RegionFromEdge) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_RegionFromEdge.ProtoReflect.Descriptor instead.
func (*ModelFile_RegionFromEdge) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ModelFile_RegionFromEdge) GetLeft() float64 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *ModelFile_RegionFromEdge) GetRight() float64 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *ModelFile_RegionFromEdge) GetTop() float64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ModelFile_RegionFromEdge) GetBottom() float64 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

type ModelFile_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datatype ModelFile_Input_InputDataType `protobuf:"varint,1,opt,name=datatype,proto3,enum=modelfile.v2.ModelFile_Input_InputDataType" json:"datatype,omitempty"`
	// Types that are assignable to ShapeRequirements:
	//
	//	*ModelFile_Input_ExactImageSize
	//	*ModelFile_Input_DivisibleImageSize
	ShapeRequirements isModelFile_Input_ShapeRequirements `protobuf_oneof:"shape_requirements"`
	RegionOfInterest  *ModelFile_RegionFromEdge           `protobuf:"bytes,4,opt,name=region_of_interest,json=regionOfInterest,proto3" json:"region_of_interest,omitempty"`
}

func (x *ModelFile_Input) Reset() {
	*x = ModelFile_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Input) ProtoMessage() {}

func (x *ModelFile_Input) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Input.ProtoReflect.Descriptor instead.
func (*ModelFile_Input) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ModelFile_Input) GetDatatype() ModelFile_Input_InputDataType {
	if x != nil {
		return x.Datatype
	}
	return ModelFile_Input_IDT_IMAGE
}

func (m *ModelFile_Input) GetShapeRequirements() isModelFile_Input_ShapeRequirements {
	if m != nil {
		return m.ShapeRequirements
	}
	return nil
}

func (x *ModelFile_Input) GetExactImageSize() *ModelFile_Input_ExactImageSizeRequirement {
	if x, ok := x.GetShapeRequirements().(*ModelFile_Input_ExactImageSize); ok {
		return x.ExactImageSize
	}
	return nil
}

func (x *ModelFile_Input) GetDivisibleImageSize() *ModelFile_Input_DivisibleImageSizeRequirement {
	if x, ok := x.GetShapeRequirements().(*ModelFile_Input_DivisibleImageSize); ok {
		return x.DivisibleImageSize
	}
	return nil
}

func (x *ModelFile_Input) GetRegionOfInterest() *ModelFile_RegionFromEdge {
	if x != nil {
		return x.RegionOfInterest
	}
	return nil
}

type isModelFile_Input_ShapeRequirements interface {
	isModelFile_Input_ShapeRequirements()
}

type ModelFile_Input_ExactImageSize struct {
	ExactImageSize *ModelFile_Input_ExactImageSizeRequirement `protobuf:"bytes,2,opt,name=exact_image_size,json=exactImageSize,proto3,oneof"`
}

type ModelFile_Input_DivisibleImageSize struct {
	DivisibleImageSize *ModelFile_Input_DivisibleImageSizeRequirement `protobuf:"bytes,3,opt,name=divisible_image_size,json=divisibleImageSize,proto3,oneof"`
}

func (*ModelFile_Input_ExactImageSize) isModelFile_Input_ShapeRequirements() {}

func (*ModelFile_Input_DivisibleImageSize) isModelFile_Input_ShapeRequirements() {}

type ModelFile_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FormatInformation:
	//
	//	*ModelFile_Output_ImageClassifiersFormat
	//	*ModelFile_Output_SegmentationMapsFormat
	//	*ModelFile_Output_BoundingBoxesFormat
	//	*ModelFile_Output_BoundingBoxSegmentationsFormat
	//	*ModelFile_Output_OcrFormat
	FormatInformation isModelFile_Output_FormatInformation `protobuf_oneof:"FormatInformation"`
}

func (x *ModelFile_Output) Reset() {
	*x = ModelFile_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output) ProtoMessage() {}

func (x *ModelFile_Output) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output.ProtoReflect.Descriptor instead.
func (*ModelFile_Output) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6}
}

func (m *ModelFile_Output) GetFormatInformation() isModelFile_Output_FormatInformation {
	if m != nil {
		return m.FormatInformation
	}
	return nil
}

func (x *ModelFile_Output) GetImageClassifiersFormat() *ModelFile_Output_ImageClassifiersOutputFormat {
	if x, ok := x.GetFormatInformation().(*ModelFile_Output_ImageClassifiersFormat); ok {
		return x.ImageClassifiersFormat
	}
	return nil
}

func (x *ModelFile_Output) GetSegmentationMapsFormat() *ModelFile_Output_SegmentationMapsOutputFormat {
	if x, ok := x.GetFormatInformation().(*ModelFile_Output_SegmentationMapsFormat); ok {
		return x.SegmentationMapsFormat
	}
	return nil
}

func (x *ModelFile_Output) GetBoundingBoxesFormat() *ModelFile_Output_BoundingBoxesOutputFormat {
	if x, ok := x.GetFormatInformation().(*ModelFile_Output_BoundingBoxesFormat); ok {
		return x.BoundingBoxesFormat
	}
	return nil
}

func (x *ModelFile_Output) GetBoundingBoxSegmentationsFormat() *ModelFile_Output_BoundingBoxSegmentationsOutputFormat {
	if x, ok := x.GetFormatInformation().(*ModelFile_Output_BoundingBoxSegmentationsFormat); ok {
		return x.BoundingBoxSegmentationsFormat
	}
	return nil
}

func (x *ModelFile_Output) GetOcrFormat() *ModelFile_Output_OcrOutputFormat {
	if x, ok := x.GetFormatInformation().(*ModelFile_Output_OcrFormat); ok {
		return x.OcrFormat
	}
	return nil
}

type isModelFile_Output_FormatInformation interface {
	isModelFile_Output_FormatInformation()
}

type ModelFile_Output_ImageClassifiersFormat struct {
	ImageClassifiersFormat *ModelFile_Output_ImageClassifiersOutputFormat `protobuf:"bytes,1,opt,name=image_classifiers_format,json=imageClassifiersFormat,proto3,oneof"`
}

type ModelFile_Output_SegmentationMapsFormat struct {
	SegmentationMapsFormat *ModelFile_Output_SegmentationMapsOutputFormat `protobuf:"bytes,2,opt,name=segmentation_maps_format,json=segmentationMapsFormat,proto3,oneof"`
}

type ModelFile_Output_BoundingBoxesFormat struct {
	BoundingBoxesFormat *ModelFile_Output_BoundingBoxesOutputFormat `protobuf:"bytes,3,opt,name=bounding_boxes_format,json=boundingBoxesFormat,proto3,oneof"`
}

type ModelFile_Output_BoundingBoxSegmentationsFormat struct {
	BoundingBoxSegmentationsFormat *ModelFile_Output_BoundingBoxSegmentationsOutputFormat `protobuf:"bytes,4,opt,name=bounding_box_segmentations_format,json=boundingBoxSegmentationsFormat,proto3,oneof"`
}

type ModelFile_Output_OcrFormat struct {
	OcrFormat *ModelFile_Output_OcrOutputFormat `protobuf:"bytes,5,opt,name=ocr_format,json=ocrFormat,proto3,oneof"`
}

func (*ModelFile_Output_ImageClassifiersFormat) isModelFile_Output_FormatInformation() {}

func (*ModelFile_Output_SegmentationMapsFormat) isModelFile_Output_FormatInformation() {}

func (*ModelFile_Output_BoundingBoxesFormat) isModelFile_Output_FormatInformation() {}

func (*ModelFile_Output_BoundingBoxSegmentationsFormat) isModelFile_Output_FormatInformation() {}

func (*ModelFile_Output_OcrFormat) isModelFile_Output_FormatInformation() {}

type ModelFile_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType            ModelFile_FileInfo_FileType    `protobuf:"varint,1,opt,name=file_type,json=fileType,proto3,enum=modelfile.v2.ModelFile_FileInfo_FileType" json:"file_type,omitempty"`
	NetworkName         string                         `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkId           string                         `protobuf:"bytes,3,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkExperimentId string                         `protobuf:"bytes,4,opt,name=network_experiment_id,json=networkExperimentId,proto3" json:"network_experiment_id,omitempty"`
	NetworkSnapshotId   string                         `protobuf:"bytes,5,opt,name=network_snapshot_id,json=networkSnapshotId,proto3" json:"network_snapshot_id,omitempty"`
	NetworkType         ModelFile_FileInfo_NetworkType `protobuf:"varint,6,opt,name=network_type,json=networkType,proto3,enum=modelfile.v2.ModelFile_FileInfo_NetworkType" json:"network_type,omitempty"`
	NetworkVersion      *ModelFile_Version             `protobuf:"bytes,7,opt,name=network_version,json=networkVersion,proto3" json:"network_version,omitempty"`
	RuntimeVersion      *ModelFile_Version             `protobuf:"bytes,8,opt,name=runtime_version,json=runtimeVersion,proto3" json:"runtime_version,omitempty"`
	Precision           ModelFile_FileInfo_Precision   `protobuf:"varint,9,opt,name=precision,proto3,enum=modelfile.v2.ModelFile_FileInfo_Precision" json:"precision,omitempty"`
}

func (x *ModelFile_FileInfo) Reset() {
	*x = ModelFile_FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_FileInfo) ProtoMessage() {}

func (x *ModelFile_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_FileInfo.ProtoReflect.Descriptor instead.
func (*ModelFile_FileInfo) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ModelFile_FileInfo) GetFileType() ModelFile_FileInfo_FileType {
	if x != nil {
		return x.FileType
	}
	return ModelFile_FileInfo_FT_ONNX_MODEL
}

func (x *ModelFile_FileInfo) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *ModelFile_FileInfo) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *ModelFile_FileInfo) GetNetworkExperimentId() string {
	if x != nil {
		return x.NetworkExperimentId
	}
	return ""
}

func (x *ModelFile_FileInfo) GetNetworkSnapshotId() string {
	if x != nil {
		return x.NetworkSnapshotId
	}
	return ""
}

func (x *ModelFile_FileInfo) GetNetworkType() ModelFile_FileInfo_NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return ModelFile_FileInfo_NT_UNKNOWN
}

func (x *ModelFile_FileInfo) GetNetworkVersion() *ModelFile_Version {
	if x != nil {
		return x.NetworkVersion
	}
	return nil
}

func (x *ModelFile_FileInfo) GetRuntimeVersion() *ModelFile_Version {
	if x != nil {
		return x.RuntimeVersion
	}
	return nil
}

func (x *ModelFile_FileInfo) GetPrecision() ModelFile_FileInfo_Precision {
	if x != nil {
		return x.Precision
	}
	return ModelFile_FileInfo_P_UNDEFINED
}

type ModelFile_Content_KeySlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrappedKey     []byte                             `protobuf:"bytes,1,opt,name=wrapped_key,json=wrappedKey,proto3" json:"wrapped_key,omitempty"`
	WrappingMethod ModelFile_Content_EncryptionMethod `protobuf:"varint,2,opt,name=wrapping_method,json=wrappingMethod,proto3,enum=modelfile.v2.ModelFile_Content_EncryptionMethod" json:"wrapping_method,omitempty"`
}

func (x *ModelFile_Content_KeySlot) Reset() {
	*x = ModelFile_Content_KeySlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Content_KeySlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Content_KeySlot) ProtoMessage() {}

func (x *ModelFile_Content_KeySlot) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Content_KeySlot.ProtoReflect.Descriptor instead.
func (*ModelFile_Content_KeySlot) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *ModelFile_Content_KeySlot) GetWrappedKey() []byte {
	if x != nil {
		return x.WrappedKey
	}
	return nil
}

func (x *ModelFile_Content_KeySlot) GetWrappingMethod() ModelFile_Content_EncryptionMethod {
	if x != nil {
		return x.WrappingMethod
	}
	return ModelFile_Content_EM_NONE
}

type ModelFile_Input_ExactImageSizeRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSize *ModelFile_ImageSize `protobuf:"bytes,1,opt,name=image_size,json=imageSize,proto3" json:"image_size,omitempty"`
}

func (x *ModelFile_Input_ExactImageSizeRequirement) Reset() {
	*x = ModelFile_Input_ExactImageSizeRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Input_ExactImageSizeRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Input_ExactImageSizeRequirement) ProtoMessage() {}

func (x *ModelFile_Input_ExactImageSizeRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Input_ExactImageSizeRequirement.ProtoReflect.Descriptor instead.
func (*ModelFile_Input_ExactImageSizeRequirement) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *ModelFile_Input_ExactImageSizeRequirement) GetImageSize() *ModelFile_ImageSize {
	if x != nil {
		return x.ImageSize
	}
	return nil
}

type ModelFile_Input_DivisibleImageSizeRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumImageSize   *ModelFile_ImageSize `protobuf:"bytes,1,opt,name=minimum_image_size,json=minimumImageSize,proto3" json:"minimum_image_size,omitempty"`       // the image must not be smaller than this value
	ImageSizeDivisors  *ModelFile_ImageSize `protobuf:"bytes,2,opt,name=image_size_divisors,json=imageSizeDivisors,proto3" json:"image_size_divisors,omitempty"`    // contains the values that the respective image dimensions must be divisible by
	SuggestedImageSize *ModelFile_ImageSize `protobuf:"bytes,3,opt,name=suggested_image_size,json=suggestedImageSize,proto3" json:"suggested_image_size,omitempty"` // contains the image size that the image has been trained with
}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) Reset() {
	*x = ModelFile_Input_DivisibleImageSizeRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Input_DivisibleImageSizeRequirement) ProtoMessage() {}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Input_DivisibleImageSizeRequirement.ProtoReflect.Descriptor instead.
func (*ModelFile_Input_DivisibleImageSizeRequirement) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 5, 1}
}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) GetMinimumImageSize() *ModelFile_ImageSize {
	if x != nil {
		return x.MinimumImageSize
	}
	return nil
}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) GetImageSizeDivisors() *ModelFile_ImageSize {
	if x != nil {
		return x.ImageSizeDivisors
	}
	return nil
}

func (x *ModelFile_Input_DivisibleImageSizeRequirement) GetSuggestedImageSize() *ModelFile_ImageSize {
	if x != nil {
		return x.SuggestedImageSize
	}
	return nil
}

// reserved for future use
type ModelFile_Output_ImageClassifiersOutputFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModelFile_Output_ImageClassifiersOutputFormat) Reset() {
	*x = ModelFile_Output_ImageClassifiersOutputFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_ImageClassifiersOutputFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_ImageClassifiersOutputFormat) ProtoMessage() {}

func (x *ModelFile_Output_ImageClassifiersOutputFormat) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_ImageClassifiersOutputFormat.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_ImageClassifiersOutputFormat) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 0}
}

type ModelFile_Output_SegmentationMapsOutputFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSize *ModelFile_ImageSize `protobuf:"bytes,1,opt,name=image_size,json=imageSize,proto3" json:"image_size,omitempty"` // a dimension that is set to 0 will be treated as "same as in input image"
}

func (x *ModelFile_Output_SegmentationMapsOutputFormat) Reset() {
	*x = ModelFile_Output_SegmentationMapsOutputFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_SegmentationMapsOutputFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_SegmentationMapsOutputFormat) ProtoMessage() {}

func (x *ModelFile_Output_SegmentationMapsOutputFormat) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_SegmentationMapsOutputFormat.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_SegmentationMapsOutputFormat) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *ModelFile_Output_SegmentationMapsOutputFormat) GetImageSize() *ModelFile_ImageSize {
	if x != nil {
		return x.ImageSize
	}
	return nil
}

type ModelFile_Output_BoundingBoxesOutputFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfBoxes         uint64 `protobuf:"varint,1,opt,name=number_of_boxes,json=numberOfBoxes,proto3" json:"number_of_boxes,omitempty"`
	Stride                uint64 `protobuf:"varint,2,opt,name=stride,proto3" json:"stride,omitempty"`
	X1Offset              uint64 `protobuf:"varint,3,opt,name=x1_offset,json=x1Offset,proto3" json:"x1_offset,omitempty"`
	Y1Offset              uint64 `protobuf:"varint,4,opt,name=y1_offset,json=y1Offset,proto3" json:"y1_offset,omitempty"`
	X2Offset              uint64 `protobuf:"varint,5,opt,name=x2_offset,json=x2Offset,proto3" json:"x2_offset,omitempty"`
	Y2Offset              uint64 `protobuf:"varint,6,opt,name=y2_offset,json=y2Offset,proto3" json:"y2_offset,omitempty"`
	ConfidenceOffset      uint64 `protobuf:"varint,7,opt,name=confidence_offset,json=confidenceOffset,proto3" json:"confidence_offset,omitempty"`
	ClassLabelIndexOffset uint64 `protobuf:"varint,8,opt,name=class_label_index_offset,json=classLabelIndexOffset,proto3" json:"class_label_index_offset,omitempty"`
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) Reset() {
	*x = ModelFile_Output_BoundingBoxesOutputFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_BoundingBoxesOutputFormat) ProtoMessage() {}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_BoundingBoxesOutputFormat.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_BoundingBoxesOutputFormat) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 2}
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetNumberOfBoxes() uint64 {
	if x != nil {
		return x.NumberOfBoxes
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetStride() uint64 {
	if x != nil {
		return x.Stride
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetX1Offset() uint64 {
	if x != nil {
		return x.X1Offset
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetY1Offset() uint64 {
	if x != nil {
		return x.Y1Offset
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetX2Offset() uint64 {
	if x != nil {
		return x.X2Offset
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetY2Offset() uint64 {
	if x != nil {
		return x.Y2Offset
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetConfidenceOffset() uint64 {
	if x != nil {
		return x.ConfidenceOffset
	}
	return 0
}

func (x *ModelFile_Output_BoundingBoxesOutputFormat) GetClassLabelIndexOffset() uint64 {
	if x != nil {
		return x.ClassLabelIndexOffset
	}
	return 0
}

type ModelFile_Output_BoundingBoxSegmentationsOutputFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSize             *ModelFile_ImageSize `protobuf:"bytes,1,opt,name=image_size,json=imageSize,proto3" json:"image_size,omitempty"`                                          // a dimension that is set to 0 will be treated as "same as in input image"
	RelativeToBoundingBox bool                 `protobuf:"varint,2,opt,name=relative_to_bounding_box,json=relativeToBoundingBox,proto3" json:"relative_to_bounding_box,omitempty"` // if false, the segmentation map will be treated as relative to the whole image
}

func (x *ModelFile_Output_BoundingBoxSegmentationsOutputFormat) Reset() {
	*x = ModelFile_Output_BoundingBoxSegmentationsOutputFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_BoundingBoxSegmentationsOutputFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_BoundingBoxSegmentationsOutputFormat) ProtoMessage() {}

func (x *ModelFile_Output_BoundingBoxSegmentationsOutputFormat) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_BoundingBoxSegmentationsOutputFormat.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_BoundingBoxSegmentationsOutputFormat) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 3}
}

func (x *ModelFile_Output_BoundingBoxSegmentationsOutputFormat) GetImageSize() *ModelFile_ImageSize {
	if x != nil {
		return x.ImageSize
	}
	return nil
}

func (x *ModelFile_Output_BoundingBoxSegmentationsOutputFormat) GetRelativeToBoundingBox() bool {
	if x != nil {
		return x.RelativeToBoundingBox
	}
	return false
}

type ModelFile_Output_OcrOutputFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfCharacters uint64                                        `protobuf:"varint,1,opt,name=number_of_characters,json=numberOfCharacters,proto3" json:"number_of_characters,omitempty"` // 0 is interpreted as no character limit
	Characters         []*ModelFile_Output_OcrOutputFormat_Character `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *ModelFile_Output_OcrOutputFormat) Reset() {
	*x = ModelFile_Output_OcrOutputFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_OcrOutputFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_OcrOutputFormat) ProtoMessage() {}

func (x *ModelFile_Output_OcrOutputFormat) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_OcrOutputFormat.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_OcrOutputFormat) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 4}
}

func (x *ModelFile_Output_OcrOutputFormat) GetNumberOfCharacters() uint64 {
	if x != nil {
		return x.NumberOfCharacters
	}
	return 0
}

func (x *ModelFile_Output_OcrOutputFormat) GetCharacters() []*ModelFile_Output_OcrOutputFormat_Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

type ModelFile_Output_OcrOutputFormat_Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utf8Representation []byte                                                   `protobuf:"bytes,1,opt,name=utf8_representation,json=utf8Representation,proto3" json:"utf8_representation,omitempty"`
	CharacterType      ModelFile_Output_OcrOutputFormat_Character_CharacterType `protobuf:"varint,2,opt,name=character_type,json=characterType,proto3,enum=modelfile.v2.ModelFile_Output_OcrOutputFormat_Character_CharacterType" json:"character_type,omitempty"`
	Ignore             bool                                                     `protobuf:"varint,3,opt,name=ignore,proto3" json:"ignore,omitempty"`
}

func (x *ModelFile_Output_OcrOutputFormat_Character) Reset() {
	*x = ModelFile_Output_OcrOutputFormat_Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modelfile_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelFile_Output_OcrOutputFormat_Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelFile_Output_OcrOutputFormat_Character) ProtoMessage() {}

func (x *ModelFile_Output_OcrOutputFormat_Character) ProtoReflect() protoreflect.Message {
	mi := &file_modelfile_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelFile_Output_OcrOutputFormat_Character.ProtoReflect.Descriptor instead.
func (*ModelFile_Output_OcrOutputFormat_Character) Descriptor() ([]byte, []int) {
	return file_modelfile_v2_proto_rawDescGZIP(), []int{0, 6, 4, 0}
}

func (x *ModelFile_Output_OcrOutputFormat_Character) GetUtf8Representation() []byte {
	if x != nil {
		return x.Utf8Representation
	}
	return nil
}

func (x *ModelFile_Output_OcrOutputFormat_Character) GetCharacterType() ModelFile_Output_OcrOutputFormat_Character_CharacterType {
	if x != nil {
		return x.CharacterType
	}
	return ModelFile_Output_OcrOutputFormat_Character_CT_REGULAR
}

func (x *ModelFile_Output_OcrOutputFormat_Character) GetIgnore() bool {
	if x != nil {
		return x.Ignore
	}
	return false
}

var File_modelfile_v2_proto protoreflect.FileDescriptor

var file_modelfile_v2_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2d, 0x76, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x32, 0x22, 0x83, 0x27, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x4a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x4b, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x9b, 0x05, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x79,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x68, 0x61, 0x73, 0x68, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x60, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x5d, 0x0a, 0x11,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x4a, 0x0a, 0x09, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x4b, 0x65, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x59, 0x0a, 0x0f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x0e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a,
	0x64, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4d,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x22, 0x2f, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x45,
	0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4d, 0x5f, 0x41,
	0x45, 0x53, 0x5f, 0x47, 0x43, 0x4d, 0x10, 0x01, 0x1a, 0x7b, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x55, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x1a, 0x64, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6c, 0x65,
	0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x1a, 0xac, 0x06, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x74, 0x79, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x61, 0x63,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x64, 0x69,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x10, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x1a, 0x5d, 0x0a, 0x19, 0x45, 0x78, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x1a, 0x98, 0x02, 0x0a, 0x1d, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x69,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x14, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x12, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x1e, 0x0a, 0x0d, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x49, 0x44, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x00, 0x42, 0x14, 0x0a, 0x12, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x82, 0x0d, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x77, 0x0a, 0x18,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x16, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x77, 0x0a, 0x18, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x6e,
	0x0a, 0x15, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x90,
	0x01, 0x0a, 0x21, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48,
	0x00, 0x52, 0x1e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x4f, 0x0a, 0x0a, 0x6f, 0x63, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4f, 0x63, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x63, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x1a, 0x1e, 0x0a, 0x1c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x1a, 0x60, 0x0a, 0x1c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x1a, 0xb5, 0x02, 0x0a, 0x19, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x78, 0x31, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x78, 0x31, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x79, 0x31, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x79, 0x31, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x78, 0x32, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x78, 0x32, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x79, 0x32, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x79, 0x32,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xa1, 0x01, 0x0a,
	0x24, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78,
	0x1a, 0xbe, 0x03, 0x0a, 0x0f, 0x4f, 0x63, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4f, 0x63, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x9e, 0x02, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x13, 0x75, 0x74, 0x66, 0x38, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x75, 0x74, 0x66,
	0x38, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6d, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4f, 0x63, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x54, 0x5f, 0x52, 0x45,
	0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x54, 0x5f, 0x50, 0x41, 0x44, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x42, 0x13, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xff, 0x07, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x4f, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x44, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x46, 0x54, 0x5f, 0x4f, 0x4e, 0x4e, 0x58, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x46, 0x54, 0x5f, 0x5a, 0x58, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x54, 0x5f, 0x56, 0x49, 0x5a, 0x49, 0x4f, 0x54, 0x49, 0x58,
	0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x22, 0xc0, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43,
	0x45, 0x5f, 0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x17, 0x0a, 0x13, 0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x45,
	0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x54, 0x5f,
	0x41, 0x4e, 0x4f, 0x4d, 0x41, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x05, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x43, 0x41,
	0x4c, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x43, 0x4f,
	0x47, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x22, 0xcc, 0x01, 0x0a, 0x09, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x5f, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x5f, 0x46, 0x50,
	0x38, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x5f, 0x46, 0x50, 0x31, 0x36, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x5f, 0x46, 0x50, 0x33, 0x32, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x5f, 0x46, 0x50, 0x36, 0x34, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x5f, 0x49, 0x4e, 0x54,
	0x38, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x5f,
	0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x5f, 0x55, 0x49, 0x4e,
	0x54, 0x31, 0x36, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33,
	0x32, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10,
	0x0c, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x5f, 0x4d, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x45,
	0x43, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0d, 0x42, 0x35, 0x5a, 0x19, 0x64, 0x65, 0x6e, 0x6b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69,
	0x6c, 0x65, 0x2f, 0x76, 0x32, 0xaa, 0x02, 0x17, 0x44, 0x45, 0x4e, 0x4b, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modelfile_v2_proto_rawDescOnce sync.Once
	file_modelfile_v2_proto_rawDescData = file_modelfile_v2_proto_rawDesc
)

func file_modelfile_v2_proto_rawDescGZIP() []byte {
	file_modelfile_v2_proto_rawDescOnce.Do(func() {
		file_modelfile_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_modelfile_v2_proto_rawDescData)
	})
	return file_modelfile_v2_proto_rawDescData
}

var file_modelfile_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_modelfile_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_modelfile_v2_proto_goTypes = []interface{}{
	(ModelFile_Content_CompressionMethod)(0),                      // 0: modelfile.v2.ModelFile.Content.CompressionMethod
	(ModelFile_Content_EncryptionMethod)(0),                       // 1: modelfile.v2.ModelFile.Content.EncryptionMethod
	(ModelFile_Input_InputDataType)(0),                            // 2: modelfile.v2.ModelFile.Input.InputDataType
	(ModelFile_Output_OcrOutputFormat_Character_CharacterType)(0), // 3: modelfile.v2.ModelFile.Output.OcrOutputFormat.Character.CharacterType
	(ModelFile_FileInfo_FileType)(0),                              // 4: modelfile.v2.ModelFile.FileInfo.FileType
	(ModelFile_FileInfo_NetworkType)(0),                           // 5: modelfile.v2.ModelFile.FileInfo.NetworkType
	(ModelFile_FileInfo_Precision)(0),                             // 6: modelfile.v2.ModelFile.FileInfo.Precision
	(*ModelFile)(nil),                                             // 7: modelfile.v2.ModelFile
	(*ModelFile_Version)(nil),                                     // 8: modelfile.v2.ModelFile.Version
	(*ModelFile_Content)(nil),                                     // 9: modelfile.v2.ModelFile.Content
	(*ModelFile_ClassLabel)(nil),                                  // 10: modelfile.v2.ModelFile.ClassLabel
	(*ModelFile_ImageSize)(nil),                                   // 11: modelfile.v2.ModelFile.ImageSize
	(*ModelFile_RegionFromEdge)(nil),                              // 12: modelfile.v2.ModelFile.RegionFromEdge
	(*ModelFile_Input)(nil),                                       // 13: modelfile.v2.ModelFile.Input
	(*ModelFile_Output)(nil),                                      // 14: modelfile.v2.ModelFile.Output
	(*ModelFile_FileInfo)(nil),                                    // 15: modelfile.v2.ModelFile.FileInfo
	(*ModelFile_Content_KeySlot)(nil),                             // 16: modelfile.v2.ModelFile.Content.KeySlot
	nil,                                                           // 17: modelfile.v2.ModelFile.Content.KeySlotsEntry
	(*ModelFile_Input_ExactImageSizeRequirement)(nil),             // 18: modelfile.v2.ModelFile.Input.ExactImageSizeRequirement
	(*ModelFile_Input_DivisibleImageSizeRequirement)(nil),         // 19: modelfile.v2.ModelFile.Input.DivisibleImageSizeRequirement
	(*ModelFile_Output_ImageClassifiersOutputFormat)(nil),         // 20: modelfile.v2.ModelFile.Output.ImageClassifiersOutputFormat
	(*ModelFile_Output_SegmentationMapsOutputFormat)(nil),         // 21: modelfile.v2.ModelFile.Output.SegmentationMapsOutputFormat
	(*ModelFile_Output_BoundingBoxesOutputFormat)(nil),            // 22: modelfile.v2.ModelFile.Output.BoundingBoxesOutputFormat
	(*ModelFile_Output_BoundingBoxSegmentationsOutputFormat)(nil), // 23: modelfile.v2.ModelFile.Output.BoundingBoxSegmentationsOutputFormat
	(*ModelFile_Output_OcrOutputFormat)(nil),                      // 24: modelfile.v2.ModelFile.Output.OcrOutputFormat
	(*ModelFile_Output_OcrOutputFormat_Character)(nil),            // 25: modelfile.v2.ModelFile.Output.OcrOutputFormat.Character
}
var file_modelfile_v2_proto_depIdxs = []int32{
	8,  // 0: modelfile.v2.ModelFile.protocol_version:type_name -> modelfile.v2.ModelFile.Version
	15, // 1: modelfile.v2.ModelFile.file_info:type_name -> modelfile.v2.ModelFile.FileInfo
	9,  // 2: modelfile.v2.ModelFile.content:type_name -> modelfile.v2.ModelFile.Content
	10, // 3: modelfile.v2.ModelFile.class_labels:type_name -> modelfile.v2.ModelFile.ClassLabel
	13, // 4: modelfile.v2.ModelFile.inputs:type_name -> modelfile.v2.ModelFile.Input
	14, // 5: modelfile.v2.ModelFile.outputs:type_name -> modelfile.v2.ModelFile.Output
	0,  // 6: modelfile.v2.ModelFile.Content.compression_method:type_name -> modelfile.v2.ModelFile.Content.CompressionMethod
	1,  // 7: modelfile.v2.ModelFile.Content.encryption_method:type_name -> modelfile.v2.ModelFile.Content.EncryptionMethod
	17, // 8: modelfile.v2.ModelFile.Content.key_slots:type_name -> modelfile.v2.ModelFile.Content.KeySlotsEntry
	2,  // 9: modelfile.v2.ModelFile.Input.datatype:type_name -> modelfile.v2.ModelFile.Input.InputDataType
	18, // 10: modelfile.v2.ModelFile.Input.exact_image_size:type_name -> modelfile.v2.ModelFile.Input.ExactImageSizeRequirement
	19, // 11: modelfile.v2.ModelFile.Input.divisible_image_size:type_name -> modelfile.v2.ModelFile.Input.DivisibleImageSizeRequirement
	12, // 12: modelfile.v2.ModelFile.Input.region_of_interest:type_name -> modelfile.v2.ModelFile.RegionFromEdge
	20, // 13: modelfile.v2.ModelFile.Output.image_classifiers_format:type_name -> modelfile.v2.ModelFile.Output.ImageClassifiersOutputFormat
	21, // 14: modelfile.v2.ModelFile.Output.segmentation_maps_format:type_name -> modelfile.v2.ModelFile.Output.SegmentationMapsOutputFormat
	22, // 15: modelfile.v2.ModelFile.Output.bounding_boxes_format:type_name -> modelfile.v2.ModelFile.Output.BoundingBoxesOutputFormat
	23, // 16: modelfile.v2.ModelFile.Output.bounding_box_segmentations_format:type_name -> modelfile.v2.ModelFile.Output.BoundingBoxSegmentationsOutputFormat
	24, // 17: modelfile.v2.ModelFile.Output.ocr_format:type_name -> modelfile.v2.ModelFile.Output.OcrOutputFormat
	4,  // 18: modelfile.v2.ModelFile.FileInfo.file_type:type_name -> modelfile.v2.ModelFile.FileInfo.FileType
	5,  // 19: modelfile.v2.ModelFile.FileInfo.network_type:type_name -> modelfile.v2.ModelFile.FileInfo.NetworkType
	8,  // 20: modelfile.v2.ModelFile.FileInfo.network_version:type_name -> modelfile.v2.ModelFile.Version
	8,  // 21: modelfile.v2.ModelFile.FileInfo.runtime_version:type_name -> modelfile.v2.ModelFile.Version
	6,  // 22: modelfile.v2.ModelFile.FileInfo.precision:type_name -> modelfile.v2.ModelFile.FileInfo.Precision
	1,  // 23: modelfile.v2.ModelFile.Content.KeySlot.wrapping_method:type_name -> modelfile.v2.ModelFile.Content.EncryptionMethod
	16, // 24: modelfile.v2.ModelFile.Content.KeySlotsEntry.value:type_name -> modelfile.v2.ModelFile.Content.KeySlot
	11, // 25: modelfile.v2.ModelFile.Input.ExactImageSizeRequirement.image_size:type_name -> modelfile.v2.ModelFile.ImageSize
	11, // 26: modelfile.v2.ModelFile.Input.DivisibleImageSizeRequirement.minimum_image_size:type_name -> modelfile.v2.ModelFile.ImageSize
	11, // 27: modelfile.v2.ModelFile.Input.DivisibleImageSizeRequirement.image_size_divisors:type_name -> modelfile.v2.ModelFile.ImageSize
	11, // 28: modelfile.v2.ModelFile.Input.DivisibleImageSizeRequirement.suggested_image_size:type_name -> modelfile.v2.ModelFile.ImageSize
	11, // 29: modelfile.v2.ModelFile.Output.SegmentationMapsOutputFormat.image_size:type_name -> modelfile.v2.ModelFile.ImageSize
	11, // 30: modelfile.v2.ModelFile.Output.BoundingBoxSegmentationsOutputFormat.image_size:type_name -> modelfile.v2.ModelFile.ImageSize
	25, // 31: modelfile.v2.ModelFile.Output.OcrOutputFormat.characters:type_name -> modelfile.v2.ModelFile.Output.OcrOutputFormat.Character
	3,  // 32: modelfile.v2.ModelFile.Output.OcrOutputFormat.Character.character_type:type_name -> modelfile.v2.ModelFile.Output.OcrOutputFormat.Character.CharacterType
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_modelfile_v2_proto_init() }
func file_modelfile_v2_proto_init() {
	if File_modelfile_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modelfile_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_ClassLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_ImageSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_RegionFromEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Content_KeySlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Input_ExactImageSizeRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Input_DivisibleImageSizeRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_ImageClassifiersOutputFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_SegmentationMapsOutputFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_BoundingBoxesOutputFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_BoundingBoxSegmentationsOutputFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_OcrOutputFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modelfile_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelFile_Output_OcrOutputFormat_Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_modelfile_v2_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ModelFile_Input_ExactImageSize)(nil),
		(*ModelFile_Input_DivisibleImageSize)(nil),
	}
	file_modelfile_v2_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ModelFile_Output_ImageClassifiersFormat)(nil),
		(*ModelFile_Output_SegmentationMapsFormat)(nil),
		(*ModelFile_Output_BoundingBoxesFormat)(nil),
		(*ModelFile_Output_BoundingBoxSegmentationsFormat)(nil),
		(*ModelFile_Output_OcrFormat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modelfile_v2_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_modelfile_v2_proto_goTypes,
		DependencyIndexes: file_modelfile_v2_proto_depIdxs,
		EnumInfos:         file_modelfile_v2_proto_enumTypes,
		MessageInfos:      file_modelfile_v2_proto_msgTypes,
	}.Build()
	File_modelfile_v2_proto = out.File
	file_modelfile_v2_proto_rawDesc = nil
	file_modelfile_v2_proto_goTypes = nil
	file_modelfile_v2_proto_depIdxs = nil
}
